//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LJC.FrameWork.Test.StockService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockQuoteContract", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StockQuoteContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChangePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PreCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AveragePrice {
            get {
                return this.AveragePriceField;
            }
            set {
                if ((this.AveragePriceField.Equals(value) != true)) {
                    this.AveragePriceField = value;
                    this.RaisePropertyChanged("AveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangePrice {
            get {
                return this.ChangePriceField;
            }
            set {
                if ((this.ChangePriceField.Equals(value) != true)) {
                    this.ChangePriceField = value;
                    this.RaisePropertyChanged("ChangePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangeRate {
            get {
                return this.ChangeRateField;
            }
            set {
                if ((this.ChangeRateField.Equals(value) != true)) {
                    this.ChangeRateField = value;
                    this.RaisePropertyChanged("ChangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Close {
            get {
                return this.CloseField;
            }
            set {
                if ((this.CloseField.Equals(value) != true)) {
                    this.CloseField = value;
                    this.RaisePropertyChanged("Close");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal High {
            get {
                return this.HighField;
            }
            set {
                if ((this.HighField.Equals(value) != true)) {
                    this.HighField = value;
                    this.RaisePropertyChanged("High");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerCode {
            get {
                return this.InnerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerCodeField, value) != true)) {
                    this.InnerCodeField = value;
                    this.RaisePropertyChanged("InnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Low {
            get {
                return this.LowField;
            }
            set {
                if ((this.LowField.Equals(value) != true)) {
                    this.LowField = value;
                    this.RaisePropertyChanged("Low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PreClose {
            get {
                return this.PreCloseField;
            }
            set {
                if ((this.PreCloseField.Equals(value) != true)) {
                    this.PreCloseField = value;
                    this.RaisePropertyChanged("PreClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volumne {
            get {
                return this.VolumneField;
            }
            set {
                if ((this.VolumneField.Equals(value) != true)) {
                    this.VolumneField = value;
                    this.RaisePropertyChanged("Volumne");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockInfoDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StockInfoDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalizationAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalizationAListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalizationBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalizationBListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyEnglishNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyShotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanycodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CsrcCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CsrcCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ListDateAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ListDateBField;
        
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityCodeAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityCodeBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpellAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpellBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalizationA {
            get {
                return this.CapitalizationAField;
            }
            set {
                if ((this.CapitalizationAField.Equals(value) != true)) {
                    this.CapitalizationAField = value;
                    this.RaisePropertyChanged("CapitalizationA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalizationAList {
            get {
                return this.CapitalizationAListField;
            }
            set {
                if ((this.CapitalizationAListField.Equals(value) != true)) {
                    this.CapitalizationAListField = value;
                    this.RaisePropertyChanged("CapitalizationAList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalizationB {
            get {
                return this.CapitalizationBField;
            }
            set {
                if ((this.CapitalizationBField.Equals(value) != true)) {
                    this.CapitalizationBField = value;
                    this.RaisePropertyChanged("CapitalizationB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalizationBList {
            get {
                return this.CapitalizationBListField;
            }
            set {
                if ((this.CapitalizationBListField.Equals(value) != true)) {
                    this.CapitalizationBListField = value;
                    this.RaisePropertyChanged("CapitalizationBList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyEnglishName {
            get {
                return this.CompanyEnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyEnglishNameField, value) != true)) {
                    this.CompanyEnglishNameField = value;
                    this.RaisePropertyChanged("CompanyEnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyShotName {
            get {
                return this.CompanyShotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyShotNameField, value) != true)) {
                    this.CompanyShotNameField = value;
                    this.RaisePropertyChanged("CompanyShotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Companycode {
            get {
                return this.CompanycodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanycodeField, value) != true)) {
                    this.CompanycodeField = value;
                    this.RaisePropertyChanged("Companycode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CsrcCode {
            get {
                return this.CsrcCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CsrcCodeField, value) != true)) {
                    this.CsrcCodeField = value;
                    this.RaisePropertyChanged("CsrcCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CsrcCodeDesc {
            get {
                return this.CsrcCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CsrcCodeDescField, value) != true)) {
                    this.CsrcCodeDescField = value;
                    this.RaisePropertyChanged("CsrcCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerCode {
            get {
                return this.InnerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerCodeField, value) != true)) {
                    this.InnerCodeField = value;
                    this.RaisePropertyChanged("InnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ListDateA {
            get {
                return this.ListDateAField;
            }
            set {
                if ((this.ListDateAField.Equals(value) != true)) {
                    this.ListDateAField = value;
                    this.RaisePropertyChanged("ListDateA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ListDateB {
            get {
                return this.ListDateBField;
            }
            set {
                if ((this.ListDateBField.Equals(value) != true)) {
                    this.ListDateBField = value;
                    this.RaisePropertyChanged("ListDateB");
                }
            }
        }
        
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegAddress {
            get {
                return this.RegAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RegAddressField, value) != true)) {
                    this.RegAddressField = value;
                    this.RaisePropertyChanged("RegAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCodeA {
            get {
                return this.SecurityCodeAField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCodeAField, value) != true)) {
                    this.SecurityCodeAField = value;
                    this.RaisePropertyChanged("SecurityCodeA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCodeB {
            get {
                return this.SecurityCodeBField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCodeBField, value) != true)) {
                    this.SecurityCodeBField = value;
                    this.RaisePropertyChanged("SecurityCodeB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortNameA {
            get {
                return this.ShortNameAField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameAField, value) != true)) {
                    this.ShortNameAField = value;
                    this.RaisePropertyChanged("ShortNameA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortNameB {
            get {
                return this.ShortNameBField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameBField, value) != true)) {
                    this.ShortNameBField = value;
                    this.RaisePropertyChanged("ShortNameB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpellA {
            get {
                return this.SpellAField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellAField, value) != true)) {
                    this.SpellAField = value;
                    this.RaisePropertyChanged("SpellA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpellB {
            get {
                return this.SpellBField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellBField, value) != true)) {
                    this.SpellBField = value;
                    this.RaisePropertyChanged("SpellB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockSimpleInfoDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StockSimpleInfoDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExchangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exchange {
            get {
                return this.ExchangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExchangeField, value) != true)) {
                    this.ExchangeField = value;
                    this.RaisePropertyChanged("Exchange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerCode {
            get {
                return this.InnerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerCodeField, value) != true)) {
                    this.InnerCodeField = value;
                    this.RaisePropertyChanged("InnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spell {
            get {
                return this.SpellField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellField, value) != true)) {
                    this.SpellField = value;
                    this.RaisePropertyChanged("Spell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkCode {
            get {
                return this.StkCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StkCodeField, value) != true)) {
                    this.StkCodeField = value;
                    this.RaisePropertyChanged("StkCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkName {
            get {
                return this.StkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StkNameField, value) != true)) {
                    this.StkNameField = value;
                    this.RaisePropertyChanged("StkName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundInfoDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FundInfoDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanGetBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundManagerInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LastChangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NetValueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalNetValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBuy {
            get {
                return this.CanBuyField;
            }
            set {
                if ((this.CanBuyField.Equals(value) != true)) {
                    this.CanBuyField = value;
                    this.RaisePropertyChanged("CanBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanGetBack {
            get {
                return this.CanGetBackField;
            }
            set {
                if ((this.CanGetBackField.Equals(value) != true)) {
                    this.CanGetBackField = value;
                    this.RaisePropertyChanged("CanGetBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundCode {
            get {
                return this.FundCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FundCodeField, value) != true)) {
                    this.FundCodeField = value;
                    this.RaisePropertyChanged("FundCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundManager {
            get {
                return this.FundManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.FundManagerField, value) != true)) {
                    this.FundManagerField = value;
                    this.RaisePropertyChanged("FundManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundManagerInfo {
            get {
                return this.FundManagerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FundManagerInfoField, value) != true)) {
                    this.FundManagerInfoField = value;
                    this.RaisePropertyChanged("FundManagerInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundName {
            get {
                return this.FundNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FundNameField, value) != true)) {
                    this.FundNameField = value;
                    this.RaisePropertyChanged("FundName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundShort {
            get {
                return this.FundShortField;
            }
            set {
                if ((object.ReferenceEquals(this.FundShortField, value) != true)) {
                    this.FundShortField = value;
                    this.RaisePropertyChanged("FundShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerCode {
            get {
                return this.InnerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerCodeField, value) != true)) {
                    this.InnerCodeField = value;
                    this.RaisePropertyChanged("InnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOpen {
            get {
                return this.IsOpenField;
            }
            set {
                if ((this.IsOpenField.Equals(value) != true)) {
                    this.IsOpenField = value;
                    this.RaisePropertyChanged("IsOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LastChangeRate {
            get {
                return this.LastChangeRateField;
            }
            set {
                if ((this.LastChangeRateField.Equals(value) != true)) {
                    this.LastChangeRateField = value;
                    this.RaisePropertyChanged("LastChangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetValue {
            get {
                return this.NetValueField;
            }
            set {
                if ((this.NetValueField.Equals(value) != true)) {
                    this.NetValueField = value;
                    this.RaisePropertyChanged("NetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NetValueDate {
            get {
                return this.NetValueDateField;
            }
            set {
                if ((this.NetValueDateField.Equals(value) != true)) {
                    this.NetValueDateField = value;
                    this.RaisePropertyChanged("NetValueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spell {
            get {
                return this.SpellField;
            }
            set {
                if ((object.ReferenceEquals(this.SpellField, value) != true)) {
                    this.SpellField = value;
                    this.RaisePropertyChanged("Spell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalNetValue {
            get {
                return this.TotalNetValueField;
            }
            set {
                if ((this.TotalNetValueField.Equals(value) != true)) {
                    this.TotalNetValueField = value;
                    this.RaisePropertyChanged("TotalNetValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockService.IStockService")]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetHisDayQuoteSpan", ReplyAction="http://tempuri.org/IStockService/GetHisDayQuoteSpanResponse")]
        LJC.FrameWork.Test.StockService.StockQuoteContract[] GetHisDayQuoteSpan(string innerCode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetHisDayQuote", ReplyAction="http://tempuri.org/IStockService/GetHisDayQuoteResponse")]
        LJC.FrameWork.Test.StockService.StockQuoteContract[] GetHisDayQuote(string innerCode, bool lastest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockInfo", ReplyAction="http://tempuri.org/IStockService/GetStockInfoResponse")]
        LJC.FrameWork.Test.StockService.StockInfoDataContract GetStockInfo(string innerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockInfoBySecurityCodeA", ReplyAction="http://tempuri.org/IStockService/GetStockInfoBySecurityCodeAResponse")]
        LJC.FrameWork.Test.StockService.StockInfoDataContract[] GetStockInfoBySecurityCodeA(string securityCodeA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAllStockInfo", ReplyAction="http://tempuri.org/IStockService/GetAllStockInfoResponse")]
        LJC.FrameWork.Test.StockService.StockInfoDataContract[] GetAllStockInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSimpleStockInfoList", ReplyAction="http://tempuri.org/IStockService/GetSimpleStockInfoListResponse")]
        LJC.FrameWork.Test.StockService.StockSimpleInfoDataContract[] GetSimpleStockInfoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetRealQuote", ReplyAction="http://tempuri.org/IStockService/GetRealQuoteResponse")]
        LJC.FrameWork.Test.StockService.StockQuoteContract GetRealQuote(string innerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetFundInfo", ReplyAction="http://tempuri.org/IStockService/GetFundInfoResponse")]
        LJC.FrameWork.Test.StockService.FundInfoDataContract GetFundInfo(string fundCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/NextTradeDate", ReplyAction="http://tempuri.org/IStockService/NextTradeDateResponse")]
        System.DateTime NextTradeDate(System.DateTime now);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/NextOpenTime", ReplyAction="http://tempuri.org/IStockService/NextOpenTimeResponse")]
        System.DateTime NextOpenTime(System.DateTime now);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/IsOpen", ReplyAction="http://tempuri.org/IStockService/IsOpenResponse")]
        bool IsOpen(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCurrMonthTradeDay", ReplyAction="http://tempuri.org/IStockService/GetCurrMonthTradeDayResponse")]
        System.DateTime[] GetCurrMonthTradeDay(int year, int mon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/SetTradeDate", ReplyAction="http://tempuri.org/IStockService/SetTradeDateResponse")]
        void SetTradeDate(System.DateTime dt, bool canTrade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetIndexRealQuote", ReplyAction="http://tempuri.org/IStockService/GetIndexRealQuoteResponse")]
        LJC.FrameWork.Test.StockService.StockQuoteContract[] GetIndexRealQuote(string[] indexCodes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceChannel : LJC.FrameWork.Test.StockService.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<LJC.FrameWork.Test.StockService.IStockService>, LJC.FrameWork.Test.StockService.IStockService {
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LJC.FrameWork.Test.StockService.StockQuoteContract[] GetHisDayQuoteSpan(string innerCode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHisDayQuoteSpan(innerCode, start, end);
        }
        
        public LJC.FrameWork.Test.StockService.StockQuoteContract[] GetHisDayQuote(string innerCode, bool lastest) {
            return base.Channel.GetHisDayQuote(innerCode, lastest);
        }
        
        public LJC.FrameWork.Test.StockService.StockInfoDataContract GetStockInfo(string innerCode) {
            return base.Channel.GetStockInfo(innerCode);
        }
        
        public LJC.FrameWork.Test.StockService.StockInfoDataContract[] GetStockInfoBySecurityCodeA(string securityCodeA) {
            return base.Channel.GetStockInfoBySecurityCodeA(securityCodeA);
        }
        
        public LJC.FrameWork.Test.StockService.StockInfoDataContract[] GetAllStockInfo() {
            return base.Channel.GetAllStockInfo();
        }
        
        public LJC.FrameWork.Test.StockService.StockSimpleInfoDataContract[] GetSimpleStockInfoList() {
            return base.Channel.GetSimpleStockInfoList();
        }
        
        public LJC.FrameWork.Test.StockService.StockQuoteContract GetRealQuote(string innerCode) {
            return base.Channel.GetRealQuote(innerCode);
        }
        
        public LJC.FrameWork.Test.StockService.FundInfoDataContract GetFundInfo(string fundCode) {
            return base.Channel.GetFundInfo(fundCode);
        }
        
        public System.DateTime NextTradeDate(System.DateTime now) {
            return base.Channel.NextTradeDate(now);
        }
        
        public System.DateTime NextOpenTime(System.DateTime now) {
            return base.Channel.NextOpenTime(now);
        }
        
        public bool IsOpen(System.DateTime dt) {
            return base.Channel.IsOpen(dt);
        }
        
        public System.DateTime[] GetCurrMonthTradeDay(int year, int mon) {
            return base.Channel.GetCurrMonthTradeDay(year, mon);
        }
        
        public void SetTradeDate(System.DateTime dt, bool canTrade) {
            base.Channel.SetTradeDate(dt, canTrade);
        }
        
        public LJC.FrameWork.Test.StockService.StockQuoteContract[] GetIndexRealQuote(string[] indexCodes) {
            return base.Channel.GetIndexRealQuote(indexCodes);
        }
    }
}
