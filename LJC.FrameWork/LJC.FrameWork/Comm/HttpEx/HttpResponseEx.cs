using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Net;

namespace LJC.FrameWork.Comm
{
    [Serializable]
    public class HttpResponseEx
    {
        #region
                // Summary:
        //     The Cache-Control header, which specifies caching directives that must be
        //     obeyed by all caching mechanisms along the request/response chain.
        public bool CacheControl
        {
            get;
            set;
        }

        public string Connection;
        //
        // Summary:
        //     The Date header, which specifies the date and time at which the response
        //     originated.
        public string  Date;
        //
        // Summary:
        //     The Keep-Alive header, which specifies a parameter to be used to maintain
        //     a persistent connection.
        public string  KeepAlive;
        //
        // Summary:
        //     The Pragma header, which specifies implementation-specific directives that
        //     might apply to any agent along the request/response chain.
        public string Pragma;
        //
        // Summary:
        //     The Trailer header, which specifies that the indicated header fields are
        //     present in the trailer of a message that is encoded with chunked transfer-coding.
        public string Trailer;
        //
        // Summary:
        //     The Transfer-Encoding header, which specifies what (if any) type of transformation
        //     has been applied to the message body.
        public string TransferEncoding;
        //
        // Summary:
        //     The Upgrade header, which specifies additional communications protocols that
        //     the client supports.
        public string Upgrade;
        //
        // Summary:
        //     The Via header, which specifies intermediate protocols to be used by gateway
        //     and proxy agents.
        public string Via;
        //
        // Summary:
        //     The Warning header, which specifies additional information about that status
        //     or transformation of a message that might not be reflected in the message.
        public string Warning;
        //
        // Summary:
        //     The Allow header, which specifies the set of HTTP methods that are supported.
        public string Allow;
        //
        // Summary:
        //     The Content-Length header, which specifies the length, in bytes, of the accompanying
        //     body data.
        public string ContentLength;
        //
        // Summary:
        //     The Content-Type header, which specifies the MIME type of the accompanying
        //     body data.
        public string ContentType;
        //
        // Summary:
        //     The Content-Encoding header, which specifies the encodings that have been
        //     applied to the accompanying body data.
        public string ContentEncoding;
        //
        // Summary:
        //     The Content-Langauge header, which specifies the natural language or languages
        //     of the accompanying body data.
        public string ContentLanguage;
        //
        // Summary:
        //     The Content-Location header, which specifies a URI from which the accompanying
        //     body can be obtained.
        public string ContentLocation;
        //
        // Summary:
        //     The Content-MD5 header, which specifies the MD5 digest of the accompanying
        //     body data, for the purpose of providing an end-to-end message integrity check.
        public string ContentMd5;
        //
        // Summary:
        //     The Range header, which specifies the subrange or subranges of the response
        //     that the client requests be returned in lieu of the entire response.
        public string ContentRange;
        //
        // Summary:
        //     The Expires header, which specifies the date and time after which the accompanying
        //     body data should be considered stale.
        public string Expires;
        //
        // Summary:
        //     The Last-Modified header, which specifies the date and time at which the
        //     accompanying body data was last modified.
        public string LastModified;
        //
        // Summary:
        //     The Accept-Ranges header, which specifies the range that is accepted by the
        //     server.
        public string AcceptRanges;
        //
        // Summary:
        //     The Age header, which specifies the time, in seconds, since the response
        //     was generated by the originating server.
        public string Age;
        //
        // Summary:
        //     The Etag header, which specifies the current value for the requested variant.
        public string ETag;
        //
        // Summary:
        //     The Location header, which specifies a URI to which the client is redirected
        //     to obtain the requested resource.
        public string Location;
        //
        // Summary:
        //     The Proxy-Authenticate header, which specifies that the client must authenticate
        //     itself to a proxy.
        public string ProxyAuthenticate;
        //
        // Summary:
        //     The Retry-After header, which specifies a time (in seconds), or a date and
        //     time, after which the client can retry its request.
        public string RetryAfter;
        //
        // Summary:
        //     The Server header, which specifies information about the originating server
        //     agent.
        public string Server;
        //
        // Summary:
        //     The Set-Cookie header, which specifies cookie data that is presented to the
        //     client.
        public string SetCookie;
        //
        // Summary:
        //     The Vary header, which specifies the request headers that are used to determine
        //     whether a cached response is fresh.
        public string Vary;
        //
        // Summary:
        //     The WWW-Authenticate header, which specifies that the client must authenticate
        //     itself to the server.
        public string WwwAuthenticate;

        #endregion

        private string _responseContent;
        /// <summary>
        /// 请求返回内容
        /// </summary>
        public string ResponseContent
        {
            get;
            set;
        }

        private static string GetHeaderValue(WebHeaderCollection header,string name)
        {
            try
            {
                if (header == null)
                    return string.Empty;
                return header.Get(name);
            }
            catch
            {
                return string.Empty;
            }
        }

        private bool _successed = false;
        public bool Successed
        {
            get
            {
                return _successed;
            }
            internal set
            {
                _successed = value;
                if (value)
                {
                    ErrorMsg = null;
                }
            }
        }

        private Exception _errorMsg = new Exception();
        /// <summary>
        /// 错误信息
        /// </summary>
        public Exception ErrorMsg
        {
            get
            {
                return _errorMsg;
            }
            internal set
            {
                _errorMsg = value;
            }
        }

        public string ResponseUrl
        {
            get;
            internal set;
        }

        public HttpResponseEx PraseHeader(HttpWebResponse httpWebResponse)
        {
            if (httpWebResponse != null)
            {
                this.AcceptRanges = httpWebResponse.Headers.Get("AcceptRanges");
                this.Age = httpWebResponse.Headers.Get("Age");
                this.Allow = httpWebResponse.Headers.Get("Allow");
                this.Connection = httpWebResponse.Headers.Get("Connection");
                this.ContentEncoding = httpWebResponse.Headers.Get("Content-Encoding");
                this.ContentLanguage = httpWebResponse.Headers.Get("Content-Language");
                this.ContentLength = httpWebResponse.Headers.Get("Content-Length");
                this.ContentLocation = httpWebResponse.Headers.Get("Content-Location");
                this.ContentMd5 = httpWebResponse.Headers.Get("ContentMd5");
                this.ContentRange = httpWebResponse.Headers.Get("Content-Range");
                this.ContentType = httpWebResponse.Headers.Get("Content-Type");
                this.Date = httpWebResponse.Headers.Get("Date");
                this.ETag = httpWebResponse.Headers.Get("ETag");
                this.Expires = httpWebResponse.Headers.Get("Expires");
                this.KeepAlive = httpWebResponse.Headers.Get("KeepAlive");
                this.LastModified = httpWebResponse.Headers.Get("LastModified");
                this.Location = httpWebResponse.Headers.Get("Location");
                this.Pragma = httpWebResponse.Headers.Get("Pragma");
                this.ProxyAuthenticate = httpWebResponse.Headers.Get("ProxyAuthenticate");
                this.RetryAfter = httpWebResponse.Headers.Get("RetryAfter");
                this.Server = httpWebResponse.Headers.Get("Server");
                this.SetCookie = httpWebResponse.Headers.Get("Set-Cookie");
                this.Trailer = httpWebResponse.Headers.Get("Trailer");
                this.TransferEncoding = httpWebResponse.Headers.Get("Transfer-Encoding");
                this.Upgrade = httpWebResponse.Headers.Get("Upgrade");
                this.Vary = httpWebResponse.Headers.Get("Vary");
                this.Via = httpWebResponse.Headers.Get("Via");
                this.Warning = httpWebResponse.Headers.Get("Warning");
                this.WwwAuthenticate = httpWebResponse.Headers.Get("WwwAuthenticate");

                this.ResponseUrl = httpWebResponse.ResponseUri.AbsoluteUri;
            }
            return this;
        }
    }
}
