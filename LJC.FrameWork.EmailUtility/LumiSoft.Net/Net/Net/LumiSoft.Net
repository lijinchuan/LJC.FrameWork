<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LumiSoft.Net</name>
    </assembly>
    <members>
        <member name="T:LumiSoft.Net.AUTH.AuthHelper">
            <summary>
            Provides helper methods for authentications(APOP,CRAM-MD5,DIGEST-MD5).
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Apop(System.String,System.String)">
            <summary>
            Calculates APOP authentication compare value.
            </summary>
            <param name="password">Password.</param>
            <param name="passwordTag">Password tag.</param>
            <returns>Returns value what must be used for comparing passwords.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Cram_Md5(System.String,System.String)">
            <summary>
            Calculates CRAM-MD5 authentication compare value.
            </summary>
            <param name="password">Password.</param>
            <param name="hashKey">Hash calculation key</param>
            <returns>Returns value what must be used for comparing passwords.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Digest_Md5(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Calculates DIGEST-MD5 authentication compare value.
            </summary>
            <param name="client_server">Specifies if client or server value calculated. 
            Client and server has diffrent calculation method.</param>
            <param name="realm">Use domain or machine name for this.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <param name="nonce">Server password tag.</param>
            <param name="cnonce">Client password tag.</param>
            <param name="digest_uri"></param>
            <returns>Returns value what must be used for comparing passwords.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Create_Digest_Md5_ServerResponse(System.String,System.String)">
            <summary>
            Creates AUTH Digest-md5 server response what server must send to client.
            </summary>
            <param name="realm">Use domain or machine name for this.</param>
            <param name="nonce">Server password tag.Random hex string is suggested.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.GenerateNonce">
            <summary>
            Generates random nonce value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.HmacMd5(System.String,System.String)">
            <summary>
            Calculates keyed md5 hash from specifieed text and with specified hash key.
            </summary>
            <param name="hashKey"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Md5(System.String)">
            <summary>
            Calculates md5 hash from specified string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Hex(System.String)">
            <summary>
            Converts specified string to hexa string.
            </summary>
            <param name="text"></param>
            <returns></returns> 
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Base64en(System.String)">
            <summary>
            Encodes specified string to base64 string.
            </summary>
            <param name="text">Text to encode.</param>
            <returns>Returns encoded string.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AuthHelper.Base64de(System.String)">
            <summary>
            Decodes specified base64 string.
            </summary>
            <param name="text">Base64 string to decode.</param>
            <returns>Returns decoded string.</returns>
        </member>
        <member name="T:System.Security.Cryptography.HMACMD5">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
            <summary>
            Rfc 2104.
            </summary>
            <param name="rgbKey"></param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="rgb"></param>
            <param name="ib"></param>
            <param name="cb"></param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.HashFinal">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Security.Cryptography.HMACMD5.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.SaslAuthTypes">
            <summary>
            SASL authentications
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AUTH.SaslAuthTypes.None">
            <summary>
            Non authentication
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AUTH.SaslAuthTypes.Login">
            <summary>
            LOGIN.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AUTH.SaslAuthTypes.Cram_md5">
            <summary>
            CRAM-MD5
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AUTH.SaslAuthTypes.Digest_md5">
            <summary>
            DIGEST-MD5.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AUTH.SaslAuthTypes.All">
            <summary>
            All authentications.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.DnsCache">
            <summary>
            This class implement dns query cache.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsCache.GetFromCache(System.String,System.Int32)">
            <summary>
            Tries to get dns records from cache, if any.
            </summary>
            <param name="qname"></param>
            <param name="qtype"></param>
            <returns>Returns null if not in cache.</returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsCache.AddToCache(System.String,System.Int32,LumiSoft.Net.Dns.DnsServerResponse)">
            <summary>
            Adds dns records to cache.
            </summary>
            <param name="qname"></param>
            <param name="qtype"></param>
            <param name="answers"></param>
        </member>
        <member name="T:LumiSoft.Net.Dns.A_Record">
            <summary>
            A record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.A_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="IP">IP address.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.A_Record.IP">
            <summary>
            Gets mail host dns name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.NS_Record">
            <summary>
            NS record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.NS_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="nameServer">Name server name.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.NS_Record.NameServer">
            <summary>
            Gets name server name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.CNAME_Record">
            <summary>
            CNAME record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.CNAME_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="alias">Alias.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.CNAME_Record.Alias">
            <summary>
            Gets alias.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.SOA_Record">
            <summary>
            SOA record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.SOA_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="nameServer">Name server.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.SOA_Record.NameServer">
            <summary>
            Gets name server.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.PTR_Record">
            <summary>
            PTR record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.PTR_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="domainName">DomainName.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.PTR_Record.DomainName">
            <summary>
            Gets domain name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.MX_Record">
            <summary>
            MX record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.MX_Record.#ctor(System.Int32,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="preference">MX record preference.</param>
            <param name="host">Mail host dns name.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.MX_Record.Preference">
            <summary>
            Gets MX record preference.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Dns.MX_Record.Host">
            <summary>
            Gets mail host dns name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.TXT_Record">
            <summary>
            TXT record class.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.TXT_Record.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="text">Text.</param>
        </member>
        <member name="P:LumiSoft.Net.Dns.TXT_Record.Text">
            <summary>
            Gets text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.DnsReplyCode">
            <summary>
            Dns reply codes.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.DnsReplyCode.Ok">
            <summary>
            Requested records retrieved sucessfully.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.DnsReplyCode.NoEntries">
            <summary>
            No requested records found.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.DnsReplyCode.TempError">
            <summary>
            There was error retrieving records.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.DnsEx">
            <summary>
            Dns resolver.
            </summary>
            <example>
            <code>
            // Set dns servers
            DnsEx.DnsServers = new string[]{"194.126.115.18"};
            
            DnsEx dns = DnsEx();
            
            // Get MX records
            MX_Record[] mxRecords = dns.GetMXRecords("lumisoft.ee")
            
            // Do your stuff
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.Query(System.String,LumiSoft.Net.Dns.QTYPE)">
            <summary>
            Queries server with specified query.
            </summary>
            <param name="queryText">Query text. It depends on queryType.</param>
            <param name="queryType">Query type.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetARecords(System.String)">
            <summary>
            Gets IPv4 host addess records.
            </summary>
            <param name="domain">Domain name which A records to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetNSRecords(System.String)">
            <summary>
            Gets name server records.
            </summary>
            <param name="domain">Domain name which A records to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetCNAMERecords(System.String)">
            <summary>
            Gets CNAME records.
            </summary>
            <param name="domain">Domain name which CNAME records to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetPTRRecords(System.String)">
            <summary>
            Gets PTR records.
            </summary>
            <param name="ip">IP address which domain names to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetMXRecords(System.String)">
            <summary>
            Gets MX records.(MX records are sorted by preference, lower array element is prefered)
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetMXRecords(System.String,LumiSoft.Net.Dns.MX_Record[]@)">
            <summary>
            Gets MX records.(MX records are sorted by preference, lower array element is prefered)
            </summary>
            <param name="domain"></param>
            <param name="mxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetTXTRecords(System.String)">
            <summary>
            Gets text records.
            </summary>
            <param name="domain">Domain name which A records to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.GetAAAARecords(System.String)">
            <summary>
            Gets IPv6 host addess records.
            </summary>
            <param name="domain">Domain name which AAAA records to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.FilterRecords(System.Collections.ArrayList,System.Type)">
            <summary>
            Filters out specified type of records from answer.
            </summary>
            <param name="answers"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.ParseMxRecord(System.Byte[],System.Int32@)">
            <summary>
            Parses MX record.
            </summary>
            <param name="reply"></param>
            <param name="offset"></param>
            <returns>Returns null, if failed.</returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.QueryServer(System.String,LumiSoft.Net.Dns.QTYPE,System.Int32)">
            <summary>
            Sends query to server.
            </summary>
            <param name="qname">Query text.</param>
            <param name="qtype">Query type.</param>
            <param name="qclass">Query class.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.CreateQuery(System.Int32,System.String,LumiSoft.Net.Dns.QTYPE,System.Int32)">
            <summary>
            Creates new query.
            </summary>
            <param name="ID"></param>
            <param name="qname"></param>
            <param name="qtype"></param>
            <param name="qclass"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsEx.ParseAnswers(System.Byte[],System.Int32)">
            <summary>
            Parses answer.
            </summary>
            <param name="reply"></param>
            <param name="queryID"></param>
            <returns>Returns Dns_Answer[] collection if answer parsed successfully or throws exception if failed.</returns>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsEx.DnsServers">
            <summary>
            Gets or sets dns servers.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsEx.UseDnsCache">
            <summary>
            Gets or sets if to use dns caching.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsEx.ID">
            <summary>
            Get next query ID.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.DnsServerResponse">
            <summary>
            This class holds dns server response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetARecords">
            <summary>
            Gets IPv4 host addess records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetNSRecords">
            <summary>
            Gets name server records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetCNAMERecords">
            <summary>
            Gets CNAME records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetSOARecords">
            <summary>
            Gets SOA records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetPTRRecords">
            <summary>
            Gets PTR records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetMXRecords">
            <summary>
            Gets MX records.(MX records are sorted by preference, lower array element is prefered)
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetTXTRecords">
            <summary>
            Gets text records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.GetAAAARecords">
            <summary>
            Gets IPv6 host addess records.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Dns.DnsServerResponse.FilterRecords(System.Collections.ArrayList,System.Type)">
            <summary>
            Filters out specified type of records from answer.
            </summary>
            <param name="answers"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsServerResponse.ConnectionOk">
            <summary>
            Gets if connection dns server was successfull.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsServerResponse.ResponseCode">
            <summary>
            Gets dns server response code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Dns.DnsServerResponse.Answers">
            <summary>
            Gets dns server returned answers. NOTE: Before using this property ensure that ConnectionOk=true and ResponseCode=RCODE.NO_ERROR.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.OPCODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.OPCODE.QUERY">
            <summary>
             a standard query.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.OPCODE.IQUERY">
            <summary>
            an inverse query.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.OPCODE.STATUS">
            <summary>
            a server status request.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.QTYPE">
            <summary>
            ´Query type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.A">
            <summary>
            IPv4 host address
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.NS">
            <summary>
            an authoritative name server
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.CNAME">
            <summary>
            the canonical name for an alias
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.SOA">
            <summary>
            marks the start of a zone of authority
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.PTR">
            <summary>
            a domain name pointer
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.MX">
            <summary>
            mail exchange
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.TXT">
            <summary>
            text strings
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.QTYPE.AAAA">
            <summary>
            IPv6 host address
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Dns.RCODE">
            <summary>
            Dns server reply codes.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.NO_ERROR">
            <summary>
            No error condition.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.FORMAT_ERRROR">
            <summary>
            Format error - The name server was unable to interpret the query.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.SERVER_FAILURE">
            <summary>
            Server failure - The name server was unable to process this query due to a problem with the name server.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.NAME_ERROR">
            <summary>
            Name Error - Meaningful only for responses from an authoritative name server, this code signifies that the
            domain name referenced in the query does not exist.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.NOT_IMPLEMENTED">
            <summary>
            Not Implemented - The name server does not support the requested kind of query.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Dns.RCODE.REFUSED">
            <summary>
            Refused - The name server refuses to perform the specified operation for policy reasons.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.TransferMode">
            <summary>
            Transfer mode.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.Client.TransferMode.Ascii">
            <summary>
            ASCII transfer mode.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.Client.TransferMode.Binary">
            <summary>
            Binary transfer mode. 
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.FTP_Client">
            <summary>
            Ftp client.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.#ctor">
            <summary>
            Default connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Dispose">
            <summary>
            Clears resources and closes connection if open.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Connect(System.String,System.Int32)">
            <summary>
            Connects to specified host.
            </summary>
            <param name="host">Host name.</param>
            <param name="port">Port.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Disconnect">
            <summary>
            Disconnects from active host.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Authenticate(System.String,System.String)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.SetCurrentDir(System.String)">
            <summary>
            Sets current directory.
            </summary>
            <param name="dir">Directory.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetList">
            <summary>
            Gets directory listing.
            </summary>
            <returns>Returns DataSet(DirInfo DataTable) with directory listing info.</returns>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.CreateDir(System.String)">
            <summary>
            Creates directory.
            </summary>
            <param name="dir">Directory name.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.RenameDir(System.String,System.String)">
            <summary>
            Renames directory.
            </summary>
            <param name="oldDir">Name of directory which to rename.</param>
            <param name="newDir">New directory name.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DeleteDir(System.String)">
            <summary>
            Deletes directory.
            </summary>
            <param name="dir">Name of directory which to delete.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.ReceiveFile(System.String,System.String)">
            <summary>
            Recieves specified file from server.
            </summary>
            <param name="fileName">File name of file which to receive.</param>
            <param name="putFileName">File path+name which to store.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.ReceiveFile(System.String,System.IO.Stream)">
            <summary>
            Recieves specified file from server.
            </summary>
            <param name="fileName">File name of file which to receive.</param>
            <param name="storeStream">Stream where to store file.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.StoreFile(System.String)">
            <summary>
            Stores specified file to server.
            </summary>
            <param name="getFileName">File path+name which to store in server.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.StoreFile(System.IO.Stream,System.String)">
            <summary>
            Stores specified file to server.
            </summary>
            <param name="getStream">Stream from where to gets file.</param>
            <param name="fileName">File name to store in server.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DeleteFile(System.String)">
            <summary>
            Deletes specified file or directory.
            </summary>
            <param name="file">File name.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.RenameFile(System.String,System.String)">
            <summary>
            Renames specified file or directory.
            </summary>
            <param name="oldFileName">File name of file what to rename.</param>
            <param name="newFileName">New file name.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.SetTransferMode(LumiSoft.Net.FTP.Client.TransferMode)">
            <summary>
            Sets transfer mode.
            </summary>
            <param name="mode">Transfer mode.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.ParseDirListing(System.String)">
            <summary>
            Parses server returned directory listing.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.PassiveMode">
            <summary>
            Gets data connection mode.
            Passive - client connects to ftp server.
            Active  - ftp server connects to client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.AuthUser_EventArgs">
            <summary>
            Provides data for the AuthUser event for FTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.#ctor(LumiSoft.Net.FTP.Server.FTP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="userName">Username.</param>
            <param name="passwData">Password data.</param>
            <param name="data">Authentication specific data(as tag).</param>
            <param name="authType">Authentication type.</param>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.Session">
            <summary>
            Gets reference to pop3 session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.PasswData">
            <summary>
            Password data. eg. for AUTH=PLAIN it's password and for AUTH=APOP it's md5HexHash.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.AuthData">
            <summary>
            Authentication specific data(as tag).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.AuthType">
            <summary>
            Authentication type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.AuthUser_EventArgs.Validated">
            <summary>
            Gets or sets if user is valid.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs">
            <summary>
            Provides data for the filesytem related events for FTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.#ctor(LumiSoft.Net.FTP.Server.FTP_Session,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name"></param>
            <param name="newName"></param>
            <param name="session"></param>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.Session">
            <summary>
            Gets reference to FTP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.Name">
            <summary>
            Gets directory or file name with path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.NewName">
            <summary>
            Gets new directory or new file name with path. This filled for Rename event only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.FileStream">
            <summary>
            Gets or sets file stream.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.Validated">
            <summary>
            Gets or sets if operation was successful. NOTE: default value is true.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FileSysEntry_EventArgs.DirInfo">
            <summary>
            Gets reference to dir listing info. Please Fill .Tables["DirInfo"] table with required fields.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.AuthUserEventHandler">
            <summary>
            Represents the method that will handle the AuthUser event for FTP_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A AuthUser_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.FileSysEntryEventHandler">
            <summary>
            Represents the method that will handle the filsystem rerlated events for FTP_Server.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.FTP_Server">
            <summary>
            FTP Server component.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketServer">
            <summary>
            This is base class for Socket and Session based servers.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.Dispose">
            <summary>
            Clean up any resources being used and stops server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.StartServer">
            <summary>
            Starts server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.StopServer">
            <summary>
            Stops server. NOTE: Active sessions aren't cancled.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.StartProcCons">
            <summary>
            Starts proccessiong incoming connections (Accepts and queues connections).
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.StartProcQueuedCons">
            <summary>
            Starts queueed connections proccessing (Creates and starts session foreach connection).
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.AddSession(System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.RemoveSession(System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.OnSysError(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.OnSessionTimeoutTimer">
            <summary>
            This method must get timedout sessions and end them.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketServer.InitNewSession(System.Net.Sockets.Socket)">
            <summary>
            Initialize and start new session here. Session isn't added to session list automatically, 
            session must add itself to server session list by calling AddSession().
            </summary>
            <param name="socket">Connected client socket.</param>
        </member>
        <member name="E:LumiSoft.Net.SocketServer.SysError">
            <summary>
            Occurs when server or session has system error(unhandled error).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.IpAddress">
            <summary>
            Gets or sets which IP address to listen.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.Port">
            <summary>
            Gets or sets which port to listen.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.Threads">
            <summary>
            Gets or sets maximum session threads.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.CommandIdleTimeOut">
            <summary>
            Command idle timeout in milliseconds.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.IPEndPoint">
            <summary>
            Gets or sets IPEndPoint server to listen. NOTE: If server running and changeing IPEndPoint, server will be restarted automatically.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.MaxConnections">
            <summary>
            Gets or sets maximum allowed connections.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.Enabled">
            <summary>
            Runs and stops server.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.LogCommands">
            <summary>
            Gets or sets if to log commands.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.SessionIdleTimeOut">
            <summary>
            Session idle timeout in milliseconds.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.MaxBadCommands">
            <summary>
            Gets or sets maximum bad commands allowed to session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.HostName">
            <summary>
            Gets or set host name that is reported to clients.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketServer.Sessions">
            <summary>
            Gets active sessions.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Server.#ctor">
            <summary>
            Defalut constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Server.InitNewSession(System.Net.Sockets.Socket)">
            <summary>
            
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Server.OnValidate_IpAddress(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Raises event ValidateIP event.
            </summary>
            <param name="localEndPoint">Server IP.</param>
            <param name="remoteEndPoint">Connected client IP.</param>
            <returns>Returns true if connection allowed.</returns>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Server.OnAuthUser(LumiSoft.Net.FTP.Server.FTP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Authenticates user.
            </summary>
            <param name="session">Reference to current pop3 session.</param>
            <param name="userName">User name.</param>
            <param name="passwData"></param>
            <param name="data"></param>
            <param name="authType"></param>
            <returns></returns>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.ValidateIPAddress">
            <summary>
            Occurs when new computer connected to FTP server.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.AuthUser">
            <summary>
            Occurs when connected user tryes to authenticate.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.GetDirInfo">
            <summary>
            Occurs when server needs directory info (directories,files in deirectory).
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.DirExists">
            <summary>
            Occurs when server needs to validatee directory.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.CreateDir">
            <summary>
            Occurs when server needs needs to create directory.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.DeleteDir">
            <summary>
            Occurs when server needs needs to delete directory.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.FileExists">
            <summary>
            Occurs when server needs needs validate file.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.StoreFile">
            <summary>
            Occurs when server needs needs to store file.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.GetFile">
            <summary>
            Occurs when server needs needs to get file.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.DeleteFile">
            <summary>
            Occurs when server needs needs to delete file.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.RenameDirFile">
            <summary>
            Occurs when server needs needs to rname directory or file.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.FTP.Server.FTP_Server.SessionLog">
            <summary>
            Occurs when POP3 session has finished and session log is available.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Server.FTP_Session">
            <summary>
            FTP Session.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ISocketServerSession">
            <summary>
            Summary description for ISocketServerSession.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ISocketServerSession.OnSessionTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ISocketServerSession.SessionLastDataTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.FTP.Server.FTP_Server,System.String,LumiSoft.Net.SocketLogger)">
            <summary>
            Default constructor.
            </summary>
            <param name="clientSocket">Referance to socket.</param>
            <param name="server">Referance to FTP server.</param>
            <param name="sessionID">Session ID which is assigned to this session.</param>
            <param name="logWriter">Log writer.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.StartSession">
            <summary>
            Starts session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.EndSession">
            <summary>
            Ends session, closes socket.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.OnSessionTimeout">
            <summary>
            Is called by server when session has timed out.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.OnSocketActivity(System.Object,System.EventArgs)">
            <summary>
            Is called if there was some activity on socket, some data sended or received.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>		
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.OnError(System.Exception)">
            <summary>
            Is called when error occures.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.BeginRecieveCmd">
            <summary>
            Starts recieveing command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.EndRecieveCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called if command is recieved.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
            <param name="count"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Server.FTP_Session.SwitchCommand(System.String)">
            <summary>
            Parses and executes POP3 commmand.
            </summary>
            <param name="commandTxt">FTP command text.</param>
            <returns>Returns true,if session must be terminated.</returns>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.SessionID">
            <summary>
            Gets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.SessionStartTime">
            <summary>
            Gets session start time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.SessionLastDataTime">
            <summary>
            Gets last data activity time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.UserName">
            <summary>
            Gets loggded in user name (session owner).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.LocalEndPoint">
            <summary>
            Gets EndPoint which accepted conection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.RemoteEndPoint">
            <summary>
            Gets connected Host(client) EndPoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Server.FTP_Session.Tag">
            <summary>
            Gets or sets custom user data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ICMP.ICMP_Type">
            <summary>
            ICMP type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ICMP.ICMP_Type.EchoReply">
            <summary>
            Echo rely.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ICMP.ICMP_Type.TimeExceeded">
            <summary>
            Time to live exceeded reply.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ICMP.ICMP_Type.Echo">
            <summary>
            Echo.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ICMP.EchoMessage">
            <summary>
            Echo reply message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ICMP.EchoMessage.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <param name="ttl"></param>
            <param name="time"></param>
        </member>
        <member name="M:LumiSoft.Net.ICMP.EchoMessage.ToStringEx">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.ICMP.EchoMessage.ToStringEx(LumiSoft.Net.ICMP.EchoMessage[])">
            <summary>
            
            </summary>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.ICMP.Icmp">
            <summary>
            Icmp utils.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ICMP.Icmp.Trace(System.String)">
            <summary>
            Traces specified ip.
            </summary>
            <param name="destIP"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client">
            <summary>
            IMAP client.
            </summary>
            <example>
            <code>
            using(IMAP_Client c = new IMAP_Client()){
            	c.Connect("ivx",143);
            	c.Authenticate("test","test");
            			
            	c.SelectFolder("Inbox");
            	
            	// Get messages header here
            	IMAP_FetchItem msgsInfo = c.FetchMessages(1,-1,false,true,true);
            	
            	// Do your suff
            }
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Connect(System.String,System.Int32)">
            <summary>
            Connects to IMAP server.
            </summary>		
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Disconnect">
            <summary>
            Disconnects from IMAP server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Authenticate(System.String,System.String)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolder(System.String)">
            <summary>
            Creates specified folder.
            </summary>
            <param name="folderName">Folder name. Eg. test, Inbox/SomeSubFolder. NOTE: use GetFolderSeparator() to get right folder separator.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolder(System.String)">
            <summary>
            Deletes specified folder.
            </summary>
            <param name="folderName">Folder name.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolder(System.String,System.String)">
            <summary>
            Renames specified folder.
            </summary>
            <param name="sourceFolderName">Source folder name.</param>
            <param name="destinationFolderName">Destination folder name.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolders">
            <summary>
             Gets all available folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFolders">
            <summary>
            Gets all subscribed folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolder(System.String)">
            <summary>
            Subscribes specified folder.
            </summary>
            <param name="folderName">Folder name.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnSubscribeFolder(System.String)">
            <summary>
            UnSubscribes specified folder.
            </summary>
            <param name="folderName">Folder name,</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolder(System.String)">
            <summary>
            Selects specified folder.
            </summary>
            <param name="folderName">Folder name.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderACL(System.String,System.String,LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Sets specified user ACL permissions for specified folder.
            </summary>
            <param name="folderName">Folder name which ACL to set.</param>
            <param name="userName">User name who's ACL to set.</param>
            <param name="acl">ACL permissions to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderACL(System.String,System.String)">
            <summary>
            Deletes specifieed user access to specified folder.
            </summary>
            <param name="folderName">Folder which ACL to remove.</param>
            <param name="userName">User name who's ACL to remove.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyrights(System.String)">
            <summary>
            Gets myrights to specified folder.
            </summary>
            <param name="folderName"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessages(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Makes copy of messages to specified folder.
            </summary>
            <param name="startMsgNo">Start message number.</param>
            <param name="endMsgNo">End message number. -1 = last.</param>
            <param name="destFolder">Folder where to cpoy messages.</param>
            <param name="uidCopy">Specifies if startMsgNo and endMsgNo is message UIDs.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.MoveMessages(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Moves messages to specified folder.
            </summary>
            <param name="startMsgNo">Start message number.</param>
            <param name="endMsgNo">End message number. -1 = last.</param>
            <param name="destFolder">Folder where to cpoy messages.</param>
            <param name="uidMove">Specifies if startMsgNo and endMsgNo is message UIDs.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteMessages(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Deletes specified messages.
            </summary>
            <param name="startMsgNo">Start message number.</param>
            <param name="endMsgNo">End message number. -1 = last.</param>
            <param name="uidDelete">Specifies if startMsgNo and endMsgNo is message UIDs.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessage(System.String,System.Byte[])">
            <summary>
            Stores message to specified folder.
            </summary>
            <param name="folderName">Folder where to store message.</param>
            <param name="data">Message data which to store.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchMessages(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Fetches messages headers or full messages data.
            </summary>
            <param name="startMsgNo">Start message number.</param>
            <param name="endMsgNo">End message number. -1 = last.</param>
            <param name="uidFetch">Specifies if startMsgNo and endMsgNo is message UIDs.</param>
            <param name="headersOnly">If true message headers are retrieved, otherwise full message retrieved.</param>
            <param name="setSeenFlag">If true message seen flag is setted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlags(System.Int32,System.Int32,System.Boolean,LumiSoft.Net.IMAP.Server.IMAP_MessageFlags)">
            <summary>
            Stores message folgs to sepcified messages range.
            </summary>
            <param name="startMsgNo">Start message number.</param>
            <param name="endMsgNo">End message number.</param>
            <param name="uidStore">Sepcifies if message numbers are message UID numbers.</param>
            <param name="msgFlags">Message flags to store.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetMessagesTotalSize">
            <summary>
            Gets messages total size in selected folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetUnseenMessagesCount">
            <summary>
            Gets unseen messages count in selected folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderSeparator">
            <summary>
            Gets IMAP server folder separator char.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectedFolder">
            <summary>
            Gets selected folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.RecentMessagesCount">
            <summary>
            Gets numbers of recent(not accessed messages) in selected folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.MessagesCount">
            <summary>
            Gets numbers of messages in selected folder.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_FetchItem">
            <summary>
            IMAP fetch item.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.#ctor(System.Int32,System.Int32,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Message UID.</param>
            <param name="size">Message size.</param>
            <param name="data">Message data.</param>
            <param name="headersOnly">Specifies if message data contains headers only or full message.</param>
            <param name="isNewMessage">Specifies if unseen message.</param>
            <param name="isAnswered">Specifies if message is answered.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.UID">
            <summary>
            Gets message UID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.Size">
            <summary>
            Gets message size.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.Data">
            <summary>
            Gets message data(headers or full message), it depends on HeadersOnly property.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.HeadersOnly">
            <summary>
            Gets if headers or full message requested in fetch.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.IsNewMessage">
            <summary>
            Gets if message is unseen.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_FetchItem.IsAnswered">
            <summary>
            Gets if message is answered.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.FetchHelper">
            <summary>
            FETCH command helper methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.FetchHelper.ParseHeaderFields(System.String,System.Byte[])">
            <summary>
            Returns requested header fields lines.
            </summary>
            <param name="fieldsStr">Header fields to get.</param>
            <param name="data">Message data.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.FetchHelper.ParseHeaderFieldsNot(System.String,System.Byte[])">
            <summary>
            Returns header fields lines except requested.
            </summary>
            <param name="fieldsStr">Header fields to skip.</param>
            <param name="data">Message data.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.FetchHelper.ParseMimeEntry(LumiSoft.Net.Mime.MimeParser,System.String)">
            <summary>
            Returns requested mime entry data.
            </summary>
            <param name="parser"></param>
            <param name="mimeEntryNo"></param>
            <returns>Returns requested mime entry data or NULL if requested entri doesn't exist.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.FetchHelper.ConstructEnvelope(LumiSoft.Net.Mime.MimeParser)">
            <summary>
            Construct FETCH ENVELOPE response.
            </summary>
            <param name="parser"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.FetchHelper.ConstructBodyStructure(LumiSoft.Net.Mime.MimeParser,System.Boolean)">
            <summary>
            Constructs FETCH BODY and BODYSTRUCTURE response.
            </summary>
            <param name="parser"></param>
            <param name="bodystructure"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server._SearchHelper">
            <summary>
            Summary description for _SearchHelper.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server._SearchHelper.MatchSearchKey(System.String,System.Object,LumiSoft.Net.IMAP.Server.IMAP_Message,LumiSoft.Net.Mime.MimeParser)">
            <summary>
            Checks if message matches for specified search key.
            </summary>
            <param name="searchKey"></param>
            <param name="searchKeyValue"></param>
            <param name="messageInfo"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server._SearchHelper.ParseDate(System.String)">
            <summary>
            Parses SEARCH command date.
            </summary>
            <param name="date">Date string.</param>
            <returns>Returns date.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs">
            <summary>
            Provides data for the AuthUser event for POP3_Server and SMTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="userName">Username.</param>
            <param name="passwData">Password data.</param>
            <param name="data">Authentication specific data(as tag).</param>
            <param name="authType">Authentication type.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.PasswData">
            <summary>
            Password data. eg. for AUTH=PLAIN it's password and for AUTH=APOP it's md5HexHash.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.AuthData">
            <summary>
            Authentication specific data(as tag).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.AuthType">
            <summary>
            Authentication type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.Validated">
            <summary>
            Gets or sets if user is valid.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.AuthUser_EventArgs.ReturnData">
            <summary>
            Gets or sets authentication data what must be returned for connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs">
            <summary>
            Provides data for IMAP events.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs.#ctor(System.String,System.String)">
            <summary>
            Folder rename constructor.
            </summary>
            <param name="folder"></param>
            <param name="newFolder"></param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs.Folder">
            <summary>
            Gets folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs.NewFolder">
            <summary>
            Gets new folder name, this is available for rename only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Mailbox_EventArgs.ErrorText">
            <summary>
            Gets or sets custom error text, which is returned to client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs">
            <summary>
            Provides data for DeleteFolderACL event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="folderName">Folder name which ACL to delete.</param>
            <param name="userName">User name which ACL to delete.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs.Session">
            <summary>
            Gets current IMAP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs.Folder">
            <summary>
            Gets folder name which ACL to delete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs.UserName">
            <summary>
            Gets user name which ACL to delete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_DELETEACL_eArgs.ErrorText">
            <summary>
            Gets or sets error text returned to connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs">
            <summary>
            Provides data for GetFolderACL event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="folderName">Folder name which ACL to get.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs.Session">
            <summary>
            Gets current IMAP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs.Folder">
            <summary>
            Gets folder name which ACL to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs.ACL">
            <summary>
            Gets ACL collection. Key = userName, Value = IMAP_ACL_Flags.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GETACL_eArgs.ErrorText">
            <summary>
            Gets or sets error text returned to connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs">
            <summary>
            Provides data for GetUserACL event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="folderName">Folder name which ACL to get.</param>
            <param name="userName">User name which ACL to get.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.Session">
            <summary>
            Gets current IMAP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.Folder">
            <summary>
            Gets folder name which ACL to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.UserName">
            <summary>
            Gets user name which ACL to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.ACL">
            <summary>
            Gets or sets user permissions(ACL) for specified folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_GetUserACL_eArgs.ErrorText">
            <summary>
            Gets or sets error text returned to connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs">
            <summary>
            Provides data for SetFolderACL event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String,LumiSoft.Net.IMAP.Server.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="folderName">Folder name which ACL to set.</param>
            <param name="userName">User name which ACL to set.</param>
            <param name="flagsSetType">Specifies how flags must be stored.</param>
            <param name="aclFlags">Flags which to store.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.Session">
            <summary>
            Gets current IMAP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.Folder">
            <summary>
            Gets folder name which ACL to set.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.UserName">
            <summary>
            Gets user name which ACL to set.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.FlagsSetType">
            <summary>
            Gets how ACL flags must be stored.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.ACL">
            <summary>
            Gets ACL flags. NOTE: See this.FlagsSetType how to store flags.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_SETACL_eArgs.ErrorText">
            <summary>
            Gets or sets error text returned to connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Flags_SetType">
            <summary>
            Summary description for IMAP_Flags_SetType.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Flags_SetType.Add">
            <summary>
            Flags are added to existing ones.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Flags_SetType.Remove">
            <summary>
            Flags are removed from existing ones.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Flags_SetType.Replace">
            <summary>
            Flags are replaced.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Folder">
            <summary>
            IMAP mailbox
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Folder.#ctor(System.String,System.Boolean)">
            <summary>
            Default cnstructor.
            </summary>
            <param name="folder">Full path to folder, path separator = '/'. Eg. Inbox/myFolder .</param>
            <param name="selectable">Gets or sets if folder is selectable(SELECT command can select this folder).</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Folder.Folder">
            <summary>
            IMAP folder name. Eg. Inbox, Inbox/myFolder, ... .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Folder.Selectable">
            <summary>
            Gets or sets if folder is selectable(SELECT command can select this folder).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Folders">
            <summary>
            IMAP folders collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Folders.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="referenceName">Owner IMAP session.</param>
            <param name="referenceName">Folder Path. Eg. Inbox\.</param>
            <param name="folder">Folder name.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Folders.Add(System.String,System.Boolean)">
            <summary>
            Adds folder to folders list.
            </summary>
            <param name="folder">Full path to folder, path separator = '/'. Eg. Inbox/myFolder .</param>
            <param name="selectable">Gets or sets if folder is selectable(SELECT command can select this folder).</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Folders.Session">
            <summary>
            Gets current IMAP session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Folders.Folders">
            <summary>
            Gest list of IMAP folders.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Message">
            <summary>
            IMAP message info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Message.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Messages,System.String,System.Int32,LumiSoft.Net.IMAP.Server.IMAP_MessageFlags,System.Int64,System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="messages"></param>
            <param name="messageID">Internal messageID.</param>
            <param name="UID">Message UID. NOTE: message uid must increase all the time, for new messages.</param>
            <param name="flags">Message flags.</param>
            <param name="size">Message size.</param>
            <param name="date">Message receive date.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Message.FlagsToString">
            <summary>
            Converts message flags to string. Eg. \SEEN \DELETED .
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.MessageNo">
            <summary>
            Gets message number.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.MessageID">
            <summary>
            Gets internal messageID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.MessageUID">
            <summary>
            Gets message UID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.Flags">
            <summary>
            Gets message flags.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.Size">
            <summary>
            Gets message size.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Message.Date">
            <summary>
            Gets message size.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Messages">
            <summary>
            IMAP messages info collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.AddMessage(System.String,System.Int32,LumiSoft.Net.IMAP.Server.IMAP_MessageFlags,System.Int64,System.DateTime)">
            <summary>
            Adds new message to list.
            </summary>
            <param name="messageID">Internal messageID.</param>
            <param name="UID">Message UID. NOTE: message uid must increase all the time, for new messages.</param>
            <param name="flags">Message flags.</param>
            <param name="size">Message size.</param>
            <param name="date">Message receive date.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.RemoveMessage(LumiSoft.Net.IMAP.Server.IMAP_Message)">
            <summary>
            Removes message from list.
            </summary>
            <param name="msg">Message which to remove.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.IndexOf(LumiSoft.Net.IMAP.Server.IMAP_Message)">
            <summary>
            Gets message 1-based index.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.IndexFromUID(System.Int32)">
            <summary>
            Gets message 1-based message index from message UID.
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Messages.GetDeleteMessages">
            <summary>
            Gets messages marked for delete.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.Item(System.Int32)">
            <summary>
            Gets specified message.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.FirstUnseen">
            <summary>
            Gets first unseen message number.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.UnSeenCount">
            <summary>
            Gets unseen messages count.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.RecentCount">
            <summary>
            Gets new messages count.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.DeleteCount">
            <summary>
            Gets messages marked for delete count.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.Count">
            <summary>
            Gets messages total count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.Mailbox">
            <summary>
            Gets mailbox which messages contains.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.MailboxUID">
            <summary>
            Gets or sets mailbox UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.UID_Next">
            <summary>
            Gets predictable next UID value.(Max(messageUID) + 1).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.ReadOnly">
            <summary>
            Gets or sets if messages folder is read only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Messages.ErrorText">
            <summary>
            Gets or sets custom error text, which is returned to client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.AuthUserEventHandler">
            <summary>
            Represents the method that will handle the AuthUser event for SMTP_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A AuthUser_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.FolderEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.FoldersEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.MessagesEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.MessageEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.SharedRootFoldersEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.GetFolderACLEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.DeleteFolderACLEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.SetFolderACLEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.GetUserACLEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Server">
            <summary>
            IMAP server componet.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.#ctor">
            <summary>
            Defalut constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.InitNewSession(System.Net.Sockets.Socket)">
            <summary>
            
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnValidate_IpAddress(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Raises event ValidateIP event.
            </summary>
            <param name="localEndPoint">Server IP.</param>
            <param name="remoteEndPoint">Connected client IP.</param>
            <returns>Returns true if connection allowed.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnAuthUser(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Raises event AuthUser.
            </summary>
            <param name="session">Reference to current IMAP session.</param>
            <param name="userName">User name.</param>
            <param name="passwordData">Password compare data,it depends of authentication type.</param>
            <param name="data">For md5 eg. md5 calculation hash.It depends of authentication type.</param>
            <param name="authType">Authentication type.</param>
            <returns>Returns true if user is authenticated ok.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnSubscribeMailbox(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Raises event 'SubscribeMailbox'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox which to subscribe.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnUnSubscribeMailbox(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Raises event 'UnSubscribeMailbox'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox which to unsubscribe.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnGetSubscribedMailboxes(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Raises event 'GetSubscribedMailboxes'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="referenceName">Mailbox reference.</param>
            <param name="mailBox">Mailbox search pattern or mailbox.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnGetMailboxes(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Raises event 'GetMailboxes'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="referenceName">Mailbox reference.</param>
            <param name="mailBox">Mailbox search pattern or mailbox.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnCreateMailbox(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Raises event 'CreateMailbox'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox to create.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnDeleteMailbox(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Raises event 'DeleteMailbox'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox which to delete.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnRenameMailbox(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.String)">
            <summary>
            Raises event 'RenameMailbox'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox which to rename.</param>
            <param name="newMailboxName">New mailbox name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnGetMessagesInfo(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String)">
            <summary>
            Raises event 'GetMessagesInfo'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="mailbox">Mailbox which messages info to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnGetMessage(LumiSoft.Net.IMAP.Server.IMAP_Session,LumiSoft.Net.IMAP.Server.IMAP_Message,System.Boolean)">
            <summary>
            Raises event 'GetMessage'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="msg">Message which to get.</param>
            <param name="headersOnly">Specifies if message header or full message is wanted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnDeleteMessage(LumiSoft.Net.IMAP.Server.IMAP_Session,LumiSoft.Net.IMAP.Server.IMAP_Message)">
            <summary>
            Raises event 'DeleteMessage'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="message">Message which to delete.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnCopyMessage(LumiSoft.Net.IMAP.Server.IMAP_Session,LumiSoft.Net.IMAP.Server.IMAP_Message,System.String)">
            <summary>
            Raises event 'CopyMessage'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="msg">Message which to copy.</param>
            <param name="location">New message location.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnStoreMessage(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,LumiSoft.Net.IMAP.Server.IMAP_Message,System.Byte[])">
            <summary>
            Raises event 'StoreMessage'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="folder">Folder where to store.</param>
            <param name="msg">Message which to store.</param>
            <param name="messageData">Message data which to store.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnStoreMessageFlags(LumiSoft.Net.IMAP.Server.IMAP_Session,LumiSoft.Net.IMAP.Server.IMAP_Message)">
            <summary>
            Raises event 'StoreMessageFlags'.
            </summary>
            <param name="session">Reference to IMAP session.</param>
            <param name="msg">Message which flags to store.</param>
            <returns></returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.ValidateIPAddress">
            <summary>
            Occurs when new computer connected to IMAP server.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.AuthUser">
            <summary>
            Occurs when connected user tryes to authenticate.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.SubscribeFolder">
            <summary>
            Occurs when server requests to subscribe folder.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.UnSubscribeFolder">
            <summary>
            Occurs when server requests to unsubscribe folder.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetFolders">
            <summary>
            Occurs when server requests all available folders.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetSubscribedFolders">
            <summary>
            Occurs when server requests subscribed folders.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.CreateFolder">
            <summary>
            Occurs when server requests to create folder.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.DeleteFolder">
            <summary>
            Occurs when server requests to delete folder.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.RenameFolder">
            <summary>
            Occurs when server requests to rename folder.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetMessagesInfo">
            <summary>
            Occurs when server requests to folder messages info.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.DeleteMessage">
            <summary>
            Occurs when server requests to delete message.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.StoreMessage">
            <summary>
            Occurs when server requests to store message.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.StoreMessageFlags">
            <summary>
            Occurs when server requests to store message flags.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.CopyMessage">
            <summary>
            Occurs when server requests to copy message to new location.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetMessage">
            <summary>
            Occurs when server requests to get message.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.SessionLog">
            <summary>
            Occurs when IMAP session has finished and session log is available.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetSharedRootFolders">
            <summary>
            Occurs when IMAP server requests shared root folders info.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetFolderACL">
            <summary>
            Occurs when IMAP server requests folder ACL.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.DeleteFolderACL">
            <summary>
            Occurs when IMAP server requests to delete folder ACL.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.SetFolderACL">
            <summary>
            Occurs when IMAP server requests to set folder ACL.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Server.GetUserACL">
            <summary>
            Occurs when IMAP server requests to get user ACL for specified folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Server.MaxMessageSize">
            <summary>
            Maximum message size.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session">
            <summary>
            IMAP session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.IMAP.Server.IMAP_Server,LumiSoft.Net.SocketLogger)">
            <summary>
            Default constructor.
            </summary>
            <param name="clientSocket">Referance to socket.</param>
            <param name="server">Referance to IMAP server.</param>
            <param name="logWriter">Log writer.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.StartSession">
            <summary>
            Starts session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.EndSession">
            <summary>
            Ends session, closes socket.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSessionTimeout">
            <summary>
            Is called by server when session has timed out.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSocketActivity(System.Object,System.EventArgs)">
            <summary>
            Is called if there was some activity on socket, some data sended or received.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>		
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnError(System.Exception)">
            <summary>
            Is called when error occures.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.BeginRecieveCmd">
            <summary>
            Starts recieveing command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.EndRecieveCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called if command is recieved.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.SwitchCommand(System.String)">
            <summary>
            Executes IMAP command.
            </summary>
            <param name="IMAP_commandTxt">Original command text.</param>
            <returns>Returns true if must end session(command loop).</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.BeginAppendCmd(System.String,System.String)">
            <summary>
            Returns true if command ended syncronously.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.EndAppendCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when DATA command is finnished.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ParseMessageFalgs(System.String)">
            <summary>
            Parses message flags from string.
            </summary>
            <param name="falgsString"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.SessionID">
            <summary>
            Gets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.Authenticated">
            <summary>
            Gets if session authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.UserName">
            <summary>
            Gets loggded in user name (session owner).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.SelectedMailbox">
            <summary>
            Gets selected mailbox.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.RemoteEndPoint">
            <summary>
            Gets connected Host(client) EndPoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.LocalEndPoint">
            <summary>
            Gets local EndPoint which accepted client(connected host).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.SessionStartTime">
            <summary>
            Gets session start time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.SessionLastDataTime">
            <summary>
            Gets last data activity time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.Tag">
            <summary>
            Gets or sets custom user data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Utils">
            <summary>
            Provides utility methods for IMAP.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.ParseMessageFalgs(System.String)">
            <summary>
            Parses message flags from string.
            </summary>
            <param name="falgsString"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.MessageFlagsToString(LumiSoft.Net.IMAP.Server.IMAP_MessageFlags)">
            <summary>
            Converts message flags to string. Eg. \SEEN \DELETED .
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.ACL_to_String(LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Converts IMAP_ACL_Flags to string.
            </summary>
            <param name="flags">Flags to convert.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.ACL_From_String(System.String)">
            <summary>
            Parses IMAP_ACL_Flags from string.
            </summary>
            <param name="aclString">String from where to convert</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.NormalizeFolder(System.String)">
            <summary>
            Normalizes folder path.  Example: /Inbox/SubFolder/ will be Inbox/SubFolder.
            </summary>
            <param name="folder">Folder path to normalize.</param>
            <returns>Returns normalized folder path.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.ParseQuotedParam(System.String@)">
            <summary>
            Parses [quoted] parameter from args text. Parameter may be not quoted, then parameter is
            terminated by SP. Example: argsText="string gdkga agkgs";argsText=stringValue 10.
            
            This method also removes parsed parameter from argsText.
            </summary>
            <param name="argsText">Arguments line from where to parse param.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Utils.ParseBracketParam(System.String@)">
            <summary>
            Parses bracket parameter from args text. Parameter may be not between (), then
            then args text is considered as value. Example: (test test);test test.
            
            This method also removes parsed parameter from argsText.
            </summary>
            <param name="argsText"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.Message_EventArgs">
            <summary>
            Provides data for message related events.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.Message_EventArgs.#ctor(System.String,LumiSoft.Net.IMAP.Server.IMAP_Message)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">IMAP folder which message is.</param>
            <param name="msg"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.Message_EventArgs.#ctor(System.String,LumiSoft.Net.IMAP.Server.IMAP_Message,System.String)">
            <summary>
            Copy constructor.
            </summary>
            <param name="folder">IMAP folder which message is.</param>
            <param name="msg"></param>
            <param name="copyLocation"></param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.Message_EventArgs.#ctor(System.String,LumiSoft.Net.IMAP.Server.IMAP_Message,System.Boolean)">
            <summary>
            GetMessage constructor.
            </summary>
            <param name="folder">IMAP folder which message is.</param>
            <param name="msg"></param>
            <param name="headersOnly">Specifies if messages headers or full message is needed.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.Folder">
            <summary>
            Gets IMAP folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.Message">
            <summary>
            Gets IMAP message info.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.CopyLocation">
            <summary>
            Gets message new location. NOTE: this is available for copy command only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.MessageData">
            <summary>
            Gets or sets message data. NOTE: this is available for GetMessage and StoreMessage event only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.HeadersOnly">
            <summary>
            Gets if message headers or full message wanted. NOTE: this is available for GetMessage event only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.Message_EventArgs.ErrorText">
            <summary>
            Gets or sets custom error text, which is returned to client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.SharedRootFolders_EventArgs">
            <summary>
            Summary description for SharedRootFolders_EventArgs.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.SharedRootFolders_EventArgs.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.SharedRootFolders_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.SharedRootFolders_EventArgs.SharedRootFolders">
            <summary>
            Gets or sets users shared root folders. Ususaly there is only one root folder 'Shared Folders'.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.SharedRootFolders_EventArgs.PublicRootFolders">
            <summary>
            Gets or sets public root folders. Ususaly there is only one root folder 'Public Folders'.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_ACL_Flags">
            <summary>
            IMAP ACL(access control list) rights.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.None">
            <summary>
            No permissions at all.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.l">
            <summary>
            Lookup (mailbox is visible to LIST/LSUB commands).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.r">
            <summary>
            Read (SELECT the mailbox, perform CHECK, FETCH, PARTIAL,SEARCH, COPY from mailbox).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.s">
            <summary>
            Keep seen/unseen information across sessions (STORE SEEN flag).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.w">
            <summary>
            Write (STORE flags other than SEEN and DELETED).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.i">
            <summary>
            Insert (perform APPEND, COPY into mailbox).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.p">
            <summary>
            Post (send mail to submission address for mailbox,not enforced by IMAP4 itself).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.c">
            <summary>
            Create (CREATE new sub-mailboxes in any implementation-defined hierarchy).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.d">
            <summary>
            Delete (STORE DELETED flag, perform EXPUNGE).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.a">
            <summary>
            Administer (perform SETACL).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.All">
            <summary>
            All permissions
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags">
            <summary>
            IMAP message flags.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Seen">
            <summary>
            Message has been read.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Answered">
            <summary>
            Message has been answered.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Flagged">
            <summary>
            Message is "flagged" for urgent/special attention.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Deleted">
            <summary>
            Message is "deleted" for removal by later EXPUNGE.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Draft">
            <summary>
            Message has not completed composition.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_MessageFlags.Recent">
            <summary>
            Message is "recently" arrived in this mailbox.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.Parser.eAddress">
            <summary>
            Electronic address.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.Parser.eAddress.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="address">Electronic address. Eg. "Ivar Lumi" ivar@lumisoft.ee.</param>
        </member>
        <member name="P:LumiSoft.Net.Mime.Parser.eAddress.Email">
            <summary>
            Gets email address. Eg. ivar@lumisoft.ee .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Parser.eAddress.Mailbox">
            <summary>
            Gets mailbox. Eg. mailbox=ivar from ivar@lumisoft.ee .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Parser.eAddress.Domain">
            <summary>
            Gets domain. Eg. domain=lumisoft.ee from ivar@lumisoft.ee .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Parser.eAddress.Name">
            <summary>
            Gets name.  Eg. name='Ivar Lumi' from "Ivar Lumi" ivar@lumisoft.ee .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Parser.eAddress.ElectronicAddress">
            <summary>
            Gets full electronic address. Eg. "Ivar Lumi" ivar@lumisoft.ee .
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.MimeEntry">
            <summary>
            Mime entry.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeEntry.#ctor(System.Byte[],LumiSoft.Net.Mime.MimeParser)">
            <summary>
            Default constructor.
            </summary>
            <param name="mimeEntry"></param>
            <param name="mime"></param>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeEntry.ParseCharSet(System.String)">
            <summary>
            Parse charset.
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeEntry.ParseEncoding(System.String)">
            <summary>
            Parse encoding. quoted-printable,7bit,8bit,base64 is supported.
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeEntry.DecodeData(System.Byte[])">
            <summary>
            Decode entry data.
            </summary>
            <param name="mimeDataEntry"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.ContentEncoding">
            <summary>
            Gets content encoding.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.ContentType">
            <summary>
            Gets content type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.ContentDisposition">
            <summary>
            Gets content disposition type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.Headers">
            <summary>
            Gets headers.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.FileName">
            <summary>
            Gets file name. NOTE: available only if ContentDisposition.Attachment.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.Data">
            <summary>
            Gets mime entry decoded data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.DataNonDecoded">
            <summary>
            Gets mime entry non decoded data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.DataS">
            <summary>
            Gets string data. NOTE: available only if content-type=text/xxx.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeEntry.MimeEntries">
            <summary>
            Gets nested mime entries.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.Disposition">
            <summary>
            Content disposition.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Mime.Disposition.Attachment">
            <summary>
            Content is attachment.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Mime.Disposition.Inline">
            <summary>
            Content is embbed resource.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Mime.Disposition.Unknown">
            <summary>
            Content is unknown.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.MimeParser">
            <summary>
            Mime parser.
            </summary>
            <example>
            <code>
            // NOTE: load you message yo byte[] here (from file,pop3 or imap server, ...).
            byte[] data = null;
            
            MimeParser p = new MimeParser(data);
            
            // Do your stuff here
            string from = p.Form;
            
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.#ctor(System.Byte[])">
            <summary>
            Default constructor.
            </summary>
            <param name="msg">Mime message which to parse.</param>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseContentType(System.String)">
            <summary>
            Parse content type.
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseEntries(System.IO.MemoryStream,System.Int32,System.String)">
            <summary>
            Parses mime entries.
            </summary>
            <param name="msgStrm"></param>
            <param name="pos"></param>
            <param name="boundaryID"></param>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.GetEntries(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Gets mime entries, including nested entries. 
            </summary>
            <param name="entries"></param>
            <param name="allEntries"></param>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseDateS(System.String)">
            <summary>
            Parses rfc2822 datetime.
            </summary>
            <param name="date">Date string</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseHeaders(System.IO.Stream)">
            <summary>
            Parses headers from message or mime entry.
            </summary>
            <param name="entryStrm">Stream from where to read headers.</param>
            <returns>Returns header lines.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseHeaderField(System.String,System.IO.Stream)">
            <summary>
            Parse header specified header field value.
            
            Use this method only if you need to get only one header field, otherwise use
            MimeParser.ParseHeaderField(string fieldName,string headers).
            This avoid parsing headers multiple times.
            </summary>
            <param name="fieldName">Header field which to parse. Eg. Subject: .</param>
            <param name="entryStrm">Stream from where to read headers.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseHeaderField(System.String,System.String)">
            <summary>
            Parse header specified header field value.
            </summary>
            <param name="fieldName">Header field which to parse. Eg. Subject: .</param>
            <param name="headers">Full headers string. Use MimeParser.ParseHeaders() to get this value.</param>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeParser.ParseHeaderFiledSubField(System.String,System.String,System.String)">
            <summary>
            Parses header field sub field value. 
            For example: CONTENT-TYPE: application\octet-stream; name="yourFileName.xxx",
            fieldName="CONTENT-TYPE:" and subFieldName="name".
            </summary>
            <param name="fieldName">Main header field name.</param>
            <param name="subFieldName">Header field's sub filed name.</param>
            <param name="headers">Full headrs string.</param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.Headers">
            <summary>
            Gets message headers.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.From">
            <summary>
            Gets sender.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.To">
            <summary>
            Gets recipients.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.Cc">
            <summary>
            Gets cc.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.Bcc">
            <summary>
            Gets bcc.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.Subject">
            <summary>
            Gets subject.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.BodyText">
            <summary>
            Gets message body text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.BodyHtml">
            <summary>
            Gets message body HTML.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.MessageID">
            <summary>
            Gets messageID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.ContentType">
            <summary>
            Gets message content type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.MessageDate">
            <summary>
            Gets message date.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.MimeEntries">
            <summary>
            Gets message mime entries.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeParser.Attachments">
            <summary>
            Gets mime entries which content-disposition = attachment.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.Attachment">
            <summary>
            Attachment.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.Attachment.#ctor(System.String)">
            <summary>
            Creates attechment from file.
            </summary>
            <param name="fileName">File name which to attach. Eg. c:\aaa.eml .</param>
        </member>
        <member name="M:LumiSoft.Net.Mime.Attachment.#ctor(System.String,System.IO.Stream)">
            <summary>
            Creates attachment from stream with specified file name
            </summary>
            <param name="fileName">File name. Eg. aaa.eml .</param>
            <param name="strm">Stream which data to attach. NOTE: Data will be taken from stream current position.</param>
        </member>
        <member name="M:LumiSoft.Net.Mime.Attachment.#ctor(System.String,System.Byte[])">
            <summary>
            Creates attachment from data with specified file name.
            </summary>
            <param name="fileName">File name. Eg. aaa.eml .</param>
            <param name="fileData">Data which to attach.</param>
        </member>
        <member name="P:LumiSoft.Net.Mime.Attachment.FileName">
            <summary>
            Gets file name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Attachment.FileData">
            <summary>
            Gets file data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.Attachment.AttachmentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.Attachments">
            <summary>
            Attachments collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.Attachments.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.Attachments.Add(LumiSoft.Net.Mime.Attachment)">
            <summary>
            
            </summary>
            <param name="attachment"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mime.Attachments.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mime.MimeConstructor">
            <summary>
            Mime constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeConstructor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeConstructor.ConstructBinaryMime">
            <summary>
            Constructs mime message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mime.MimeConstructor.ConstructMime">
            <summary>
            Constructs mime message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.MessageID">
            <summary>
            Gets or sets mesaage ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.To">
            <summary>
            Gets or sets receptients.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Cc">
            <summary>
            Gets or sets .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Bcc">
            <summary>
            Gets or sets .
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.From">
            <summary>
            Gets or sets sender.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Subject">
            <summary>
            Gets or sets subject.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Date">
            <summary>
            Gets or sets message date.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Body">
            <summary>
            Gets or sets body text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.BodyHtml">
            <summary>
            Gets or sets html body.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.CharSet">
            <summary>
            Gets or sets message charset. Default is 'utf-8'.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mime.MimeConstructor.Attachments">
            <summary>
            Gets referance to attachments collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client">
            <summary>
            POP3 Client.
            </summary>
            <example>
            <code>
            using(POP3_Client c = new POP3_Client()){
            	c.Connect("ivx",110);
            	c.Authenticate("test","test",true);
            	
            	POP3_MessagesInfo mInf = c.GetMessagesInfo();
            	
            	// Do your suff
            }
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Connect(System.String,System.Int32)">
            <summary>
            Connects to specified host.
            </summary>
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Disconnect">
            <summary>
            Closes connection to POP3 server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Authenticate(System.String,System.String,System.Boolean)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">Password.</param>
            <param name="tryApop"> If true and POP3 server supports APOP, then APOP is used, otherwise normal login used.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.GetMessagesInfo">
            <summary>
            Gets messages info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.GetUidlList">
            <summary>
            Gets uid listing.
            </summary>
            <returns>Returns Hashtable containing uidl listing. Key column contains message NR and value contains message UID.</returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.GetMessage(System.Int32)">
            <summary>
            Gets specified message.
            </summary>
            <param name="nr">Message number.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.DeleteMessage(System.Int32)">
            <summary>
            Deletes specified message
            </summary>
            <param name="messageNr">Message number.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.GetTopOfMessage(System.Int32,System.Int32)">
            <summary>
            Gets top lines of message.
            </summary>
            <param name="nr">Message number which top lines to get.</param>
            <param name="nLines">Number of lines to get.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Reset">
            <summary>
            Resets session.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.SessionLog">
            <summary>
            Occurs when POP3 session has finished and session log is available.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.LogCommands">
            <summary>
            Gets or sets if to log commands.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_MessageInfo">
            <summary>
            Holds POP3 message info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_MessageInfo.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="messageID"></param>
            <param name="messageNr"></param>
            <param name="messageSize"></param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessageInfo.MessegeID">
            <summary>
            Gets message unique ID returned by pop3 server.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessageInfo.MessageNr">
            <summary>
            Gets message number in POP3 server.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessageInfo.MessageSize">
            <summary>
            Gets message size.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_MessagesInfo">
            <summary>
            Holds POP3 messages info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_MessagesInfo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_MessagesInfo.GetMessageInfo(System.Int32)">
            <summary>
            Gets specified message info.
            </summary>
            <param name="nr"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessagesInfo.TotalSize">
            <summary>
            Gets total size of messages.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessagesInfo.Count">
            <summary>
            Gets messages count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_MessagesInfo.Messages">
            <summary>
            Gets list of messages.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.AuthUser_EventArgs">
            <summary>
            Provides data for the AuthUser event for POP3_Server and SMTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.#ctor(LumiSoft.Net.POP3.Server.POP3_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="userName">Username.</param>
            <param name="passwData">Password data.</param>
            <param name="data">Authentication specific data(as tag).</param>
            <param name="authType">Authentication type.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.Session">
            <summary>
            Gets reference to pop3 session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.PasswData">
            <summary>
            Password data. eg. for AUTH=PLAIN it's password and for AUTH=APOP it's md5HexHash.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.AuthData">
            <summary>
            Authentication specific data(as tag).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.AuthType">
            <summary>
            Authentication type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.Validated">
            <summary>
            Gets or sets if user is valid.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.AuthUser_EventArgs.ReturnData">
            <summary>
            Gets or sets authentication data what must be returned for connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs">
            <summary>
            Provides data for the GetMessgesList event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs.#ctor(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Messages,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="messages"></param>
            <param name="mailbox">Mailbox name.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs.Session">
            <summary>
            Gets reference to pop3 session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs.Messages">
            <summary>
            Gets referance to POP3 messages info.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs.UserName">
            <summary>
            User Name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.GetMessagesInfo_EventArgs.Mailbox">
            <summary>
            Mailbox name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.POP3_Message">
            <summary>
            Holds POP3_Message info (ID,Size,...).
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Message.#ctor(LumiSoft.Net.POP3.Server.POP3_Messages)">
            <summary>
            Default constructor.
            </summary>
            <param name="messages"></param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.MessageID">
            <summary>
            Gets or sets message ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.MessageUID">
            <summary>
            Gets or sets message UID. This UID is reported in UIDL command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.MessageSize">
            <summary>
            Gets or sets message size.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.MarkedForDelete">
            <summary>
            Gets or sets message state flag.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.MessageNr">
            <summary>
            Gets message number. NOTE message number is 1 based (not zero based).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message.Tag">
            <summary>
            Gets or sets user data for message.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs">
            <summary>
            Provides data for the GetMailEvent,DeleteMessage,GetTopLines event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.#ctor(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Message,System.Net.Sockets.Socket)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="message">Message which to get.</param>
            <param name="socket">Connected socket.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.#ctor(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Message,System.Net.Sockets.Socket,System.Int32)">
            <summary>
            TopLines constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="message">Message which to get.</param>
            <param name="socket">Connected socket.</param>
            <param name="nLines">Number of lines to get.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.Session">
            <summary>
            Gets reference to pop3 session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.Message">
            <summary>
            Gets reference to message, which to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.MessageID">
            <summary>
            ID of message which to retrieve.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.MessageUID">
            <summary>
            UID of message which to retrieve.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.MessageData">
            <summary>
            Mail message which is delivered to user. NOTE: may be full message or top lines of message.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.Lines">
            <summary>
            Number of lines to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Message_EventArgs.UserName">
            <summary>
            User Name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.POP3_Messages">
            <summary>
            POP3 messages collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.AddMessage(System.String,System.String,System.Int32)">
            <summary>
            Adds new message to message list.
            </summary>
            <param name="messageID">Message ID.</param>
            <param name="uid">Message UID. This UID is reported in UIDL command.</param>
            <param name="messageSize">Message size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.AddMessage(System.String,System.String,System.Int32,System.Object)">
            <summary>
            Adds new message to message list.
            </summary>
            <param name="messageID">Message ID.</param>
            <param name="uid">Message UID. This UID is reported in UIDL command.</param>
            <param name="messageSize">Message size in bytes.</param>
            <param name="tag">User data for message.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.GetMessage(System.Int32)">
            <summary>
            Gets specified message from message list.
            </summary>
            <param name="messageNr">Number of message which to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.MessageExists(System.Int32)">
            <summary>
            Checks if message exists. NOTE marked for delete messages returns false.
            </summary>
            <param name="nr">Number of message which to check.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.GetTotalMessagesSize">
            <summary>
            Gets messages total sizes. NOTE messages marked for deletion is excluded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Messages.ResetDeleteFlags">
            <summary>
            Unmarks all messages, which are marked for deletion.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Messages.Count">
            <summary>
            Gets count of messages. NOTE messages marked for deletion are excluded.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Messages.ActiveMessages">
            <summary>
            Gets messages, which aren't marked for deletion.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Messages.Messages">
            <summary>
            Referance to Messages ArrayList.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Messages.Item(System.Int32)">
            <summary>
            Gets specified message.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.AuthUserEventHandler">
            <summary>
            Represents the method that will handle the AuthUser event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A AuthUser_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.GetMessagesInfoHandler">
            <summary>
            Represents the method that will handle the GetMessgesList event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A GetMessagesInfo_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.MessageHandler">
            <summary>
            Represents the method that will handle the GetMessage,DeleteMessage,GetTopLines event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A GetMessage_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.POP3_Server">
            <summary>
            POP3 server component.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.#ctor">
            <summary>
            Defalut constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.InitNewSession(System.Net.Sockets.Socket)">
            <summary>
            
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.IsUserLoggedIn(System.String)">
            <summary>
            Checks if user is logged in.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnValidate_IpAddress(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Raises event ValidateIP event.
            </summary>
            <param name="localEndPoint">Server IP.</param>
            <param name="remoteEndPoint">Connected client IP.</param>
            <returns>Returns true if connection allowed.</returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnAuthUser(LumiSoft.Net.POP3.Server.POP3_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Authenticates user.
            </summary>
            <param name="session">Reference to current pop3 session.</param>
            <param name="userName">User name.</param>
            <param name="passwData"></param>
            <param name="data"></param>
            <param name="authType"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnGetMessagesInfo(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Messages)">
            <summary>
            Gest pop3 messages info.
            </summary>
            <param name="session"></param>
            <param name="messages"></param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnGetMail(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Message,System.Net.Sockets.Socket)">
            <summary>
            Raises event get message.
            </summary>
            <param name="session"></param>
            <param name="message">Message which to get.</param>
            <param name="sessionSocket">Message which to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnDeleteMessage(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Message)">
            <summary>
            Raises delete message event.
            </summary>
            <param name="session"></param>
            <param name="message">Message which to delete.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnGetTopLines(LumiSoft.Net.POP3.Server.POP3_Session,LumiSoft.Net.POP3.Server.POP3_Message,System.Int32)">
            <summary>
            Raises event GetTopLines.
            </summary>
            <param name="session"></param>
            <param name="message">Message wich top lines to get.</param>
            <param name="nLines">Header + number of body lines to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnSessionEnd(System.Object)">
            <summary>
            Raises SessionEnd event.
            </summary>
            <param name="session">Session which is ended.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Server.OnSessionResetted(System.Object)">
            <summary>
            Raises SessionResetted event.
            </summary>
            <param name="session">Session which is resetted.</param>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.ValidateIPAddress">
            <summary>
            Occurs when new computer connected to POP3 server.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.AuthUser">
            <summary>
            Occurs when connected user tryes to authenticate.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.SessionEnd">
            <summary>
            Occurs user session ends. This is place for clean up.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.SessionResetted">
            <summary>
            Occurs user session resetted. Messages marked for deletion are unmarked.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.GetMessgesList">
            <summary>
            Occurs when server needs to know logged in user's maibox messages.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.GetMessage">
            <summary>
            Occurs when user requests specified message.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.DeleteMessage">
            <summary>
            Occurs when user requests delete message.
            </summary>		
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.GetTopLines">
            <summary>
            Occurs when user requests specified message TOP lines.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.POP3.Server.POP3_Server.SessionLog">
            <summary>
            Occurs when POP3 session has finished and session log is available.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Server.POP3_Session">
            <summary>
            POP3 Session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.POP3.Server.POP3_Server,LumiSoft.Net.SocketLogger)">
            <summary>
            Default constructor.
            </summary>
            <param name="clientSocket">Referance to socket.</param>
            <param name="server">Referance to POP3 server.</param>
            <param name="logWriter">Log writer.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.StartSession">
            <summary>
            Starts session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.EndSession">
            <summary>
            Ends session, closes socket.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.OnSessionTimeout">
            <summary>
            Is called by server when session has timed out.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.OnSocketActivity(System.Object,System.EventArgs)">
            <summary>
            Is called if there was some activity on socket, some data sended or received.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>		
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.OnError(System.Exception)">
            <summary>
            Is called when error occures.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.BeginRecieveCmd">
            <summary>
            Starts recieveing command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.EndRecieveCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called if command is recieved.
            </summary>
            <param name="result"></param>
            <param name="exception"></param>
            <param name="count"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.SwitchCommand(System.String)">
            <summary>
            Parses and executes POP3 commmand.
            </summary>
            <param name="POP3_commandTxt">POP3 command text.</param>
            <returns>Returns true,if session must be terminated.</returns>
        </member>
        <member name="M:LumiSoft.Net.POP3.Server.POP3_Session.EndSend(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when asynchronous send completes.
            </summary>
            <param name="result">If true, then send was successfull.</param>
            <param name="count">Count sended.</param>
            <param name="exception">Exception happend on send. NOTE: available only is result=false.</param>
            <param name="tag">User data.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.SessionID">
            <summary>
            Gets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.SessionStartTime">
            <summary>
            Gets session start time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.SessionLastDataTime">
            <summary>
            Gets last data activity time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.UserName">
            <summary>
            Gets loggded in user name (session owner).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.LocalEndPoint">
            <summary>
            Gets EndPoint which accepted conection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.RemoteEndPoint">
            <summary>
            Gets connected Host(client) EndPoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Server.POP3_Session.Tag">
            <summary>
            Gets or sets custom user data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net._FixedStack">
            <summary>
            Fixed Stack, last-in-first-out. Fix me: this isn't Stack, this is Queue.
            </summary>
        </member>
        <member name="M:LumiSoft.Net._FixedStack.#ctor(System.String)">
            <summary>
            Terminator holder and checker stack.
            </summary>
            <param name="terminator"></param>
        </member>
        <member name="M:LumiSoft.Net._FixedStack.Push(System.Byte[],System.Int32)">
            <summary>
            Pushes new bytes to stack.(Last in, first out). 
            </summary>
            <param name="bytes"></param>
            <param name="count">Count to push from bytes parameter</param>
            <returns>Returns number of bytes may be pushed next push.
            NOTE: returns 0 if stack contains terminator.
            </returns>
        </member>
        <member name="M:LumiSoft.Net._FixedStack.ContainsTerminator">
            <summary>
            Check if stack contains terminator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net._Parameter.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="paramName"></param>
            <param name="paramValue"></param>
        </member>
        <member name="P:LumiSoft.Net._Parameter.ParamName">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net._Parameter.ParamValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net._ParamParser">
            <summary>
            Summary description for _ParamParser.
            </summary>
        </member>
        <member name="M:LumiSoft.Net._ParamParser.Paramparser_NameValue(System.String,System.String[])">
            <summary>
            Parses name-value params.
            </summary>
            <param name="source">Parse source.</param>
            <param name="expressions">Expressions importance order. NOTE: must contain param and value groups.</param>
        </member>
        <member name="T:LumiSoft.Net.ErrorEventHandler">
            <summary>
            To be supplied.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.LogEventHandler">
            <summary>
            To be supplied.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ValidateIPHandler">
            <summary>
            Represents the method that will handle the <see href="LumiSoftMailServerSMTPSMTP_ServerValidateIPAddressFieldOrEvent.html">SMTP_Server.ValidateIPAddress</see> and <see href="LumiSoftMailServerPOP3POP3_ServerValidateIPAddressFieldOrEvent.html">POP3_Server.ValidateIPAddress</see>event.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A <see href="LumiSoftMailServerValidateIP_EventArgs.html">ValidateIP_EventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.Error_EventArgs">
            <summary>
            Provides data for the SysError event for servers.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Error_EventArgs.#ctor(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Default constructor.
            </summary>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.Exception">
            <summary>
            Occured error's exception.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.StackTrace">
            <summary>
            Occured error's stacktrace.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.Text">
            <summary>
            Gets comment text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Log_EventArgs">
            <summary>
            Provides data for the SessionLog event for POP3_Server and SMTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log_EventArgs.#ctor(System.String,LumiSoft.Net.SocketLogger)">
            <summary>
            Default constructor.
            </summary>
            <param name="logText"></param>
            <param name="logger"></param>
        </member>
        <member name="P:LumiSoft.Net.Log_EventArgs.LogText">
            <summary>
            Gets log text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log_EventArgs.Logger">
            <summary>
            Gets logger.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketLogEntry">
            <summary>
            Socket log entry.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketLogEntry.#ctor(System.String,System.Int64,LumiSoft.Net.SocketLogEntryType)">
            <summary>
            Default constructor.
            </summary>
            <param name="text">Log text.</param>
            <param name="size">Data size.</param>
            <param name="type">Log entry type</param>
        </member>
        <member name="P:LumiSoft.Net.SocketLogEntry.Text">
            <summary>
            Gets log text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogEntry.Size">
            <summary>
            Gets size of data readed or sent.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogEntry.Type">
            <summary>
            Gets log entry type.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketLogEntryType">
            <summary>
            Log entry type.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketLogger">
            <summary>
            Summary description for SocketLogger.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SocketLogger.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.LogEventHandler)">
            <summary>
            Default constructor.
            </summary>
            <param name="socket"></param>
            <param name="logHandler"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketLogger.AddReadEntry(System.String,System.Int64)">
            <summary>
            Adds data read(from remoteEndpoint) entry.
            </summary>
            <param name="text"></param>
            <param name="size"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketLogger.AddSendEntry(System.String,System.Int64)">
            <summary>
            Adds data send(to remoteEndpoint) entry.
            </summary>
            <param name="text"></param>
            <param name="size"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketLogger.AddTextEntry(System.String)">
            <summary>
            Adds free text entry.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:LumiSoft.Net.SocketLogger.Flush">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogger.SessionID">
            <summary>
            Gets or sets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogger.LogEntries">
            <summary>
            Gets log entries.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogger.LocalEndPoint">
            <summary>
            Gets local endpoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SocketLogger.RemoteEndPoint">
            <summary>
            Gets remote endpoint.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ValidateIP_EventArgs">
            <summary>
            Provides data for the ValidateIPAddress event for servers.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ValidateIP_EventArgs.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Default constructor.
            </summary>
            <param name="localEndPoint">Server IP.</param>
            <param name="remoteEndPoint">Connected client IP.</param>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.ConnectedIP">
            <summary>
            IP address of computer, which is sending mail to here.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.LocalEndPoint">
            <summary>
            Gets local endpoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.RemoteEndPoint">
            <summary>
            Gets remote endpoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.Validated">
            <summary>
            Gets or sets if IP is allowed access.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.SessionTag">
            <summary>
            Gets or sets user data what is stored to session.Tag property.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ValidateIP_EventArgs.ErrorText">
            <summary>
            Gets sor sets error text what is sent to connected socket. NOTE: This is only used if Validated = false.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs">
            <summary>
            Summary description for PartOfMessage_EventArgs.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs.#ctor(System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="jobID"></param>
            <param name="sentBlockSize">Size of sent block.</param>
            <param name="totalSent"></param>
            <param name="messageSize"></param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs.JobID">
            <summary>
            Gets job ID which these properties are.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs.SentBlockSize">
            <summary>
            Gets bytes what has sent  on this sendjob.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs.TotalSent">
            <summary>
            Gets total bytes what has been sent on this sendjob.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.PartOfMessage_EventArgs.MessageSize">
            <summary>
            Gets message size.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SendJob_EventArgs">
            <summary>
            Summary description for SendJob_Eventargs.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SendJob_EventArgs.#ctor(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="jobID"></param>
            <param name="to"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SendJob_EventArgs.#ctor(System.String,System.String[],System.String[])">
            <summary>
            
            </summary>
            <param name="jobID"></param>
            <param name="to"></param>
            <param name="defectiveEmails"></param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SendJob_EventArgs.JobID">
            <summary>
            Gets send job ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SendJob_EventArgs.To">
            <summary>
            Gets this send job's email addresses.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SendJob_EventArgs.DeffectiveEmails">
            <summary>
            Gets email addresses to which message couldn't be sent.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_ErrorType">
            <summary>
            SMTP error types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.Client.SMTP_ErrorType.ConnectionError">
            <summary>
            Connection related error.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.Client.SMTP_ErrorType.InvalidEmailAddress">
            <summary>
            Email address doesn't exist.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.Client.SMTP_ErrorType.NotSupported">
            <summary>
            Some feature isn't supported.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.Client.SMTP_ErrorType.NotAuthenticated">
            <summary>
            Authentication failed
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.Client.SMTP_ErrorType.UnKnown">
            <summary>
            Unknown error.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_Error_EventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_PartOfMessage_EventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_SendJob_EventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_Client">
            <summary>
            SMTP Client.
            </summary>
            <example>
            <code>
            SMTP_Client c = new SMTP_Client();
            c.UseSmartHost = false;
            c.DnsServers = new string[]{"194.126.115.18"};
            
            // Construct,load message here.
            // You can use here MimeConstructor to create new message.
            MemoryStream msgStrm = new MemoryStream();
            
            c.Send(new string[]{"recipeint@xx.ww"},"sender@dd.rr",msgStrm);
            				
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.#ctor(System.Windows.Forms.Control)">
            <summary>
            Use this constructor if you use this component on UI component.
            NOTE: Events are invoked on UI Thread.
            </summary>
            <param name="ownerUI"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.BeginSend(System.String[],System.String,System.IO.Stream)">
            <summary>
            Starts asynchronous sending.
            </summary>
            <param name="to">Recipients, may be from different e-domain when using dns or relay is allowed in smart host.</param>
            <param name="from">Sendres email address.</param>
            <param name="message">Stream which contains message. NOTE: reading from stream is started from stream current position.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.BeginSend">
            <summary>
            This function just controls sending.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.Send(System.String[],System.String,System.IO.Stream)">
            <summary>
            Sends message.
            </summary>
            <param name="to">Recipients. NOTE: recipients must be desination server recipients or when using SmartHost, then smart host must allow relay.</param>
            <param name="from">Sendrer's email address.</param>
            <param name="message">tream which contains message. NOTE: reading from stream is started from stream current position.</param>
            <returns>Returns true if send comeleted successfully.</returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.RemoveSenderThread(System.Threading.Thread)">
            <summary>
            Removes sender Thread - Thread has finnished sending.
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.IsReplyCode(System.String,System.String)">
            <summary>
            Checks if reply code.
            </summary>
            <param name="replyCode">Replay code to check.</param>
            <param name="reply">Full repaly.</param>
            <returns>Retruns true if reply is as specified.</returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.OnPartOfMessageIsSent(System.Int64,System.Int64,System.Int64)">
            <summary>
            Raises PartOfMessageIsSent event.
            </summary>
            <param name="sentBlockSize"></param>
            <param name="totalSent"></param>
            <param name="messageSize"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.OnNewSendJobStarted(System.String,System.String[])">
            <summary>
            Raises NewSendJob event.
            </summary>
            <param name="jobID"></param>
            <param name="to"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.OnSendJobCompleted(System.String,System.String[],System.Collections.ArrayList)">
            <summary>
            Raises SendJobCompleted event.
            </summary>
            <param name="jobID"></param>
            <param name="to"></param>
            <param name="defectiveEmails"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.OnCompletedAll">
            <summary>
            Raises CompletedAll event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Client.OnError(LumiSoft.Net.SMTP.Client.SMTP_ErrorType,System.String[],System.String)">
            <summary>
            Raises Error event.
            </summary>
            <param name="type">Error type.</param>
            <param name="affectedAddresses">Affected email addresses.</param>
            <param name="errorText">Error text.</param>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.PartOfMessageIsSent">
            <summary>
            Is raised when some send jobs message part is sent.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.NewSendJob">
            <summary>
            Is raised when new send job starts.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.SendJobCompleted">
            <summary>
            Is raised when send job completes.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.Error">
            <summary>
            Is raised when error occurs.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.CompletedAll">
            <summary>
            Is raised when all sedjobs are completed.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SMTP_Client.SessionLog">
            <summary>
            Occurs when SMTP session has finished and session log is available.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.Username">
            <summary>Stores the username used to authenticate on the SMTP server.
            If no authentication is needed leave this value blank.</summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.Password">
            <summary>Stores the password used to authenticate on the SMTP server.
            If no authentication is needed leave this value blank.</summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.HostName">
            <summary>
            Gets or sets host name reported to SMTP server. Eg. 'mail.yourserver.net'.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.SmartHost">
            <summary>
            Gets or sets smart host. Eg. 'mail.yourserver.net'.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.DnsServers">
            <summary>
            Gets or sets dns servers(IP addresses).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.UseSmartHost">
            <summary>
            Gets or sets if mail is sent through smart host or using dns.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.Port">
            <summary>
            Gets or sets SMTP port.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.MaxSenderThreads">
            <summary>
            Gets or sets maximum sender Threads.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.Errors">
            <summary>
            Gets last send attempt errors.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.LogCommands">
            <summary>
            Gets or sets if to log commands.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Client.IsSending">
            <summary>
            Gets if some send job is active.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SMTP_Error">
            <summary>
            This class holds smtp error info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SMTP_Error.#ctor(LumiSoft.Net.SMTP.Client.SMTP_ErrorType,System.String[],System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="errorType"></param>
            <param name="affectedEmails"></param>
            <param name="errorText"></param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Error.ErrorType">
            <summary>
            Gets SMTP error type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Error.AffectedEmails">
            <summary>
            Gets list of email addresses which are affected by this error.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SMTP_Error.ErrorText">
            <summary>
            Gets additional error text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.CommadCompleted">
            <summary>
            Is called when asynchronous command had completed.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Client.SmtpClientEx">
            <summary>
            SMTP client.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.Dispose">
            <summary>
            Cleasns up resources and disconnect smtp client if open.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.m_pSocket_Activity(System.Object,System.EventArgs)">
            <summary>
            Is called when socket has sent or recieved data.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.Connect(System.String,System.Int32)">
            <summary>
            Connects to sepcified host.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port where to connect.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.Connect(System.Net.IPEndPoint,System.String,System.Int32)">
            <summary>
            Connects to sepcified host.
            </summary>
            <param name="localEndpoint">Sets local endpoint. Pass null, to use default.</param>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port where to connect.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginConnect(System.String,System.Int32,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Starts connection to specified host.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port where to connect.</param>
            <param name="callback">Callback to be called if connect ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginConnect(System.Net.IPEndPoint,System.String,System.Int32,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Starts connection to specified host.
            </summary>
            <param name="localEndpoint">Sets local endpoint. Pass null, to use default.</param>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port where to connect.</param>
            <param name="callback">Callback to be called if connect ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginConnect_workerThread(System.Object)">
            <summary>
            Is called from ThreadPool Thread. This method just call synchrounous Connect.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.Disconnect">
            <summary>
            Disconnects smtp client from server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginEhlo(System.String,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Begins EHLO command.
            </summary>
            <param name="hostName">Host name which is reported to SMTP server.</param>
            <param name="callback">Callback to be called if command ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnEhloSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished EHLO command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnEhloReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading EHLO command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnHeloSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished HELO command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnHeloReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading EHLO command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginAuthenticate(System.String,System.String,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Begins authenticate.
            </summary>
            <param name="userName">Uesr name.</param>
            <param name="password">Password.</param> 
            <param name="callback">Callback to be called if command ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthCramMd5SendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished AUTH CRAM-MD5 command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthCramMd5ReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading AUTH CRAM-MD% server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthCramMd5UserPwdSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished sending username and password to smtp server.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthCramMd5UserPwdReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading user name and password send server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished AUTH LOGIN command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading MAIL FROM: command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginUserSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished sending user name to SMTP server.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginUserReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading AUTH LOGIN user send server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginPasswordSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished sending password to SMTP server.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnAuthLoginPwdReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading AUTH LOGIN password send server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginSetSender(System.String,System.Int64,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Begin setting sender.
            </summary>
            <param name="senderEmail">Sender email address what is reported to smtp server.</param>
            <param name="messageSize">Message size in bytes or -1 if message size isn't known.</param>
            <param name="callback">Callback to be called if command ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnMailSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished MAIL FROM: command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnMailReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading MAIL FROM: command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param> 
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginAddRecipient(System.String,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Begin adding recipient.
            </summary>
            <param name="recipientEmail"></param>
            <param name="callback">Callback to be called if command ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnRcptSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished RCPT TO: command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnRcptReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading RCPT TO: command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.BeginSendMessage(System.IO.Stream,LumiSoft.Net.SMTP.Client.CommadCompleted)">
            <summary>
            Starts sending message.
            </summary>
            <param name="message"></param>
            <param name="callback">Callback to be called if command ends.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnBdatSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished BDAT command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnBdatDataSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished sending BDAT message data to smtp server.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnBdatReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading BDAT: command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnDataSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished DATA command sending.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnDataReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading DATA command server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnDataMessageSendFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has sending MESSAGE to smtp server.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.OnDataMessageSendReadServerResponseFinished(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when smtp client has finished reading MESSAGE send smtp server response line.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Client.SmtpClientEx.HandleSocketError(LumiSoft.Net.SocketCallBackResult,System.Exception)">
            <summary>
            Handles socket errors.
            </summary>
            <param name="result"></param>
            <param name="x"></param>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Client.SmtpClientEx.SessionLog">
            <summary>
            Occurs when SMTP session has finished and session log is available.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SmtpClientEx.LocalEndpoint">
            <summary>
            Gets local endpoint. Returns null if smtp client isn't connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SmtpClientEx.RemoteEndPoint">
            <summary>
            Gets remote endpoint. Returns null if smtp client isn't connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SmtpClientEx.DnsServers">
            <summary>
            Gets or sets dns servers.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SmtpClientEx.Connected">
            <summary>
            Gets if smtp client is connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Client.SmtpClientEx.LastDataTime">
            <summary>
            Gets when was last activity.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator">
            <summary>
            SMTP command order validator.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.Reset">
            <summary>
            Resets state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MayHandle_MAIL">
            <summary>
            Gets if may handle MAIL command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MayHandle_RCPT">
            <summary>
            Gets if may handle RCPT command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MayHandle_DATA">
            <summary>
            Gets if may handle DATA command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MayHandle_BDAT">
            <summary>
            Gets if may handle BDAT command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MayHandle_AUTH">
            <summary>
            Gets if may handle AUTH command.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.Helo_ok">
            <summary>
            Gest or sets if HELO command handled.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.Authenticated">
            <summary>
            Gest or sets if AUTH command handled.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.MailFrom_ok">
            <summary>
            Gest or sets if MAIL command handled.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.RcptTo_ok">
            <summary>
            Gest or sets if RCPT command handled.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Cmd_Validator.BDAT_Last_ok">
            <summary>
            Gest or sets if BinaryMime.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs">
            <summary>
            Provides data for the AuthUser event for POP3_Server and SMTP_Server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.#ctor(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to pop3 session.</param>
            <param name="userName">Username.</param>
            <param name="passwData">Password data.</param>
            <param name="data">Authentication specific data(as tag).</param>
            <param name="authType">Authentication type.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.PasswData">
            <summary>
            Password data. eg. for AUTH=PLAIN it's password and for AUTH=APOP it's md5HexHash.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.AuthData">
            <summary>
            Authentication specific data(as tag).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.AuthType">
            <summary>
            Authentication type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.Validated">
            <summary>
            Gets or sets if user is valid.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.AuthUser_EventArgs.ReturnData">
            <summary>
            Gets or sets authentication data what must be returned for connected client.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.AuthUserEventHandler">
            <summary>
            Represents the method that will handle the AuthUser event for SMTP_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A AuthUser_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateMailFromHandler">
            <summary>
            Represents the method that will handle the ValidateMailFrom event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A ValidateSender_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateMailToHandler">
            <summary>
            Represents the method that will handle the ValidateMailTo event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A ValidateRecipient_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateMailboxSize">
            <summary>
            Represents the method that will handle the ValidateMailboxSize event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A ValidateMailboxSize_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.NewMailEventHandler">
            <summary>
            Represents the method that will handle the StoreMessage event for POP3_Server.
            </summary>
            <param name="sender">The source of the event. </param>
            <param name="e">A NewMail_EventArgs that contains the event data.</param>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.SMTP_Server">
            <summary>
            SMTP server component.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.#ctor">
            <summary>
            Defalut constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.InitNewSession(System.Net.Sockets.Socket)">
            <summary>
            
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.OnValidate_IpAddress(LumiSoft.Net.SMTP.Server.SMTP_Session)">
            <summary>
            Raises event ValidateIP event.
            </summary>
            <param name="session">Reference to current smtp session.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.OnAuthUser(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Raises event AuthUser.
            </summary>
            <param name="session">Reference to current smtp session.</param>
            <param name="userName">User name.</param>
            <param name="passwordData">Password compare data,it depends of authentication type.</param>
            <param name="data">For md5 eg. md5 calculation hash.It depends of authentication type.</param>
            <param name="authType">Authentication type.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.OnValidate_MailFrom(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.String)">
            <summary>
            Raises event ValidateMailFrom.
            </summary>
            <param name="session"></param>
            <param name="reverse_path"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.OnValidate_MailTo(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.String,System.Boolean)">
            <summary>
            Raises event ValidateMailTo.
            </summary>
            <param name="session"></param>
            <param name="forward_path"></param>
            <param name="email"></param>
            <param name="authenticated"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.Validate_MailBoxSize(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.Int64)">
            <summary>
            Raises event ValidateMailboxSize.
            </summary>
            <param name="session"></param>
            <param name="eAddress"></param>
            <param name="messageSize"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Server.OnStoreMessage(LumiSoft.Net.SMTP.Server.SMTP_Session,System.IO.MemoryStream)">
            <summary>
            Raises event StoreMessage.
            </summary>
            <param name="session"></param>
            <param name="msgStream"></param>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.ValidateIPAddress">
            <summary>
            Occurs when new computer connected to POP3 server.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.AuthUser">
            <summary>
            Occurs when connected user tryes to authenticate.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.ValidateMailFrom">
            <summary>
            Occurs when server needs to validate sender.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.ValidateMailTo">
            <summary>
            Occurs when server needs to validate recipient.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.ValidateMailboxSize">
            <summary>
            Occurs when server needs to validate recipient mailbox size.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.StoreMessage">
            <summary>
            Occurs when server has accepted message to store.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.SMTP.Server.SMTP_Server.SessionLog">
            <summary>
            Occurs when SMTP session has finished and session log is available.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Server.GreetingText">
            <summary>
            Gets or sets server greeting text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Server.MaxMessageSize">
            <summary>
            Maximum message size.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Server.MaxRecipients">
            <summary>
            Maximum recipients per message.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Server.SupportedAuthentications">
            <summary>
            Gets or sets server supported authentication types.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.SMTP_Session">
            <summary>
            SMTP Session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.SMTP.Server.SMTP_Server,LumiSoft.Net.SocketLogger)">
            <summary>
            Default constructor.
            </summary>
            <param name="clientSocket">Referance to socket.</param>
            <param name="server">Referance to SMTP server.</param>
            <param name="logWriter">Log writer.</param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.StartSession">
            <summary>
            Starts session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.EndSession">
            <summary>
            Ends session, closes socket.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.OnSessionTimeout">
            <summary>
            Is called by server when session has timed out.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.OnSocketActivity(System.Object,System.EventArgs)">
            <summary>
            Is called if there was some activity on socket, some data sended or received.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>		
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.OnError(System.Exception)">
            <summary>
            Is called when error occures.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.BeginRecieveCmd">
            <summary>
            Starts recieveing command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.EndRecieveCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called if command is recieved.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.SwitchCommand(System.String)">
            <summary>
            Executes SMTP command.
            </summary>
            <param name="SMTP_commandTxt">Original command text.</param>
            <returns>Returns true if must end session(command loop).</returns>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.EndDataCmd(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when DATA command is finnished.
            </summary>
            <param name="result"></param>
            <param name="count"></param>
            <param name="exception"></param>
            <param name="tag"></param>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.SMTP_Session.EndSend(LumiSoft.Net.SocketCallBackResult,System.Int64,System.Exception,System.Object)">
            <summary>
            Is called when asynchronous send completes.
            </summary>
            <param name="result">If true, then send was successfull.</param>
            <param name="count">Count sended.</param>
            <param name="exception">Exception happend on send. NOTE: available only is result=false.</param>
            <param name="tag">User data.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.SessionID">
            <summary>
            Gets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.EhloName">
            <summary>
            Gets client reported EHLO/HELO name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.Authenticated">
            <summary>
            Gets if session authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.UserName">
            <summary>
            Gets loggded in user name (session owner).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.BodyType">
            <summary>
            Gets body type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.LocalEndPoint">
            <summary>
            Gets local EndPoint which accepted client(connected host).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.RemoteEndPoint">
            <summary>
            Gets connected Host(client) EndPoint.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.MailFrom">
            <summary>
            Gets sender.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.MailTo">
            <summary>
            Gets recipients.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.SessionStartTime">
            <summary>
            Gets session start time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.SessionLastDataTime">
            <summary>
            Gets last data activity time.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.SMTP_Session.Tag">
            <summary>
            Gets or sets custom user data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.NewMail_EventArgs">
            <summary>
            Provides data for the NewMailEvent event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.#ctor(LumiSoft.Net.SMTP.Server.SMTP_Session,System.IO.MemoryStream)">
            <summary>
            Default constructor.
            </summary>		
            <param name="session">Reference to smtp session.</param>
            <param name="msgStream">Message stream.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.MessageStream">
            <summary>
            Message stream - stream where message has stored.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.MessageSize">
            <summary>
            Message size.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.MailFrom">
            <summary>
            Sender's email address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.NewMail_EventArgs.MailTo">
            <summary>
            Receptient's email address.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs">
            <summary>
            Provides data for the ValidateMailboxSize event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs.#ctor(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to smtp session.</param>
            <param name="eAddress">Email address of recipient.</param>
            <param name="messageSize">Message size.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs.eAddress">
            <summary>
            Email address which mailbox size to check.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs.MessageSize">
            <summary>
            Message size.NOTE: value 0 means that size is unknown.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateMailboxSize_EventArgs.IsValid">
            <summary>
            Gets or sets if mailbox size is valid.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs">
            <summary>
            Provides data for the ValidateMailTo event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.#ctor(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to smtp session.</param>
            <param name="mailTo">Recipient email address.</param>
            <param name="authenticated">Specifies if connected user is authenticated.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.MailTo">
            <summary>
            Recipient's email address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.Authenticated">
            <summary>
            Gets if connected user is authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.ConnectedIP">
            <summary>
            IP address of computer, which is sending mail to here.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.Validated">
            <summary>
            Gets or sets if reciptient is allowed to send mail here.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateRecipient_EventArgs.LocalRecipient">
            <summary>
            Gets or sets if recipient is local or needs relay.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs">
            <summary>
            Provides data for the ValidateMailFrom event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs.#ctor(LumiSoft.Net.SMTP.Server.SMTP_Session,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Reference to smtp session.</param>
            <param name="mailFrom">Sender email address.</param>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs.Session">
            <summary>
            Gets reference to smtp session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs.MailFrom">
            <summary>
            Sender's email address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs.ErrorText">
            <summary>
            Gets or sets error text reported to connected client.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.SMTP.Server.ValidateSender_EventArgs.Validated">
            <summary>
            Gets or sets if sender is ok.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SMTP.BodyType">
            <summary>
            Holds body(mime) type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.BodyType.x7_bit">
            <summary>
            ASCII body.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.BodyType.x8_bit">
            <summary>
            ANSI body.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SMTP.BodyType.binary">
            <summary>
            Binary body.
            </summary>
        </member>
        <member name="T:LumiSoft.Net._SocketState">
            <summary>
            Summary description for _SocketState.
            </summary>
        </member>
        <member name="P:LumiSoft.Net._SocketState.Stack">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:LumiSoft.Net._SocketState.ReadType">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:LumiSoft.Net._SocketState.Callback">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:LumiSoft.Net._SocketState.Stream">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:LumiSoft.Net._SocketState.RemFromEnd">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketCallBack">
            <summary>
            
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SocketCallBackResult">
            <summary>
            Asynchronous command execute result.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SocketCallBackResult.Ok">
            <summary>
            Operation was successfull.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SocketCallBackResult.LengthExceeded">
            <summary>
            Exceeded maximum allowed size.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SocketCallBackResult.SocketClosed">
            <summary>
            Connected client closed connection.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SocketCallBackResult.Exception">
            <summary>
            Exception happened.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.BufferedSocket">
            <summary>
            Sokcet + buffer. Socket data reads are buffered. At first Recieve returns data from
            internal buffer and if no data available, gets more from socket. Socket buffer is also
            user settable, you can add data to socket buffer directly with AppendBuffer().
            </summary>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Default constructor.
            </summary>
            <param name="socket">Source socket which to buffer.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Connect(System.Net.EndPoint)">
            <summary>
            
            </summary>
            <param name="remoteEP"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="remoteEP"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.EndConnect(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Receive(System.Byte[])">
            <summary>
            Receives data from buffer. If there isn't data in buffer, then receives more data from socket.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <param name="socketFlags"></param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.EndReceive(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Send(System.Byte[])">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <param name="socketFlags"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
            <summary>
            
            </summary>
            <param name="otpionLevel"></param>
            <param name="optionName"></param>
            <param name="optionValue"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Bind(System.Net.EndPoint)">
            <summary>
            Binds socket to local endpoint.
            </summary>
            <param name="localEP"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Shutdown(System.Net.Sockets.SocketShutdown)">
            <summary>
            
            </summary>
            <param name="how"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReceiveFromFuffer(System.Byte[])">
            <summary>
            Receives data from buffer.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReadLine">
            <summary>
            Reads line from socket.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReadLine(System.Int64)">
            <summary>
            Reads line from socket.
            </summary>
            <param name="maxLength">Maximum length to read.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginReadLine(System.IO.Stream,System.Int64,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Starts reading line from socket asynchronously.
            </summary>
            <param name="strm">Stream where to store line.</param>
            <param name="maxLength">Maximum line length.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if receive completes.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SendLine(System.String)">
            <summary>
            Sends line to socket.
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginSendLine(System.String,LumiSoft.Net.SocketCallBack)">
            <summary>
            Starts sending line to socket asynchronously.
            </summary>
            <param name="line">Data line.</param>
            <param name="callBack">Callback to be called if sending ends.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginSendLine(System.String,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Starts sending line to socket asynchronously.
            </summary>
            <param name="line">Data line.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Callback to be called if sending ends.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReadData(System.IO.Stream,System.Int64,System.String,System.String)">
            <summary>
            Reads data from socket while specified terminator is reached.
            If maximum length is exceeded, reading continues but data won't be stored to stream.
            </summary>
            <param name="storeStream">Stream where to store readed data.</param>
            <param name="maxLength">Maximum length to read.</param>
            <param name="terminator">Terminator which trminates reading.</param>
            <param name="removeFromEnd">Part of trminator what to remove from end. Can be empty or max part is terminator.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReadData(System.IO.Stream,System.Int64,System.Boolean)">
            <summary>
            Reads specified amount of data from socket.
            </summary>
            <param name="storeStream">Stream where to store readed data.</param>
            <param name="countToRead">Amount of data to read.</param>
            <param name="storeToStream">Specifes if to store readed data to stream or junk it.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.ReadData(System.IO.Stream,System.Int64)">
            <summary>
            Reads data while socket is closed with shutdown.
            If maximum length is exceeded, reading continues but data won't be stored to stream.
            </summary>
            <param name="storeStream">Stream where to store readed data.</param>
            <param name="maxLength">Maximum length to read.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SendData(System.String)">
            <summary>
            Sends data to socket.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SendData(System.Byte[])">
            <summary>
            Sends data to socket.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SendData(System.IO.Stream)">
            <summary>
            Sends data to socket.
            </summary>
            <param name="dataStream"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginReadData(System.IO.Stream,System.Int64,System.String,System.String,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Begins asynchronous data reading.
            </summary>
            <param name="strm">Stream where to store data.</param>
            <param name="maxLength">Maximum length of data which may read.</param>
            <param name="terminator">Terminator string which terminates reading. eg '\r\n'.</param>
            <param name="removeFromEnd">Removes following string at end of data.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if receive completes.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginReadData(System.IO.Stream,System.Int64,System.Int64,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Begins asynchronous data reading.
            </summary>
            <param name="strm">Stream where to store data.</param>
            <param name="lengthToRead">Length of data to read.</param>
            <param name="maxLength">Maximum length of data which may read.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if receive completes.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.OnRecievedData(System.IAsyncResult)">
            <summary>
            Is called from asynchronous socket if data is recieved.
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginSendData(System.String,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Begins asynchronous sending.
            </summary>
            <param name="data">Data to send.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if send completes.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.BeginSendData(System.IO.Stream,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Begins asynchronous sending.
            </summary>
            <param name="strm">Data to send.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if send completes.</param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.OnSendedData(System.IAsyncResult)">
            <summary>
            Is called from asynchronous socket if data is sended.
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:LumiSoft.Net.BufferedSocket.SendDataBlock(System.IO.Stream,System.Object,LumiSoft.Net.SocketCallBack)">
            <summary>
            Starts sending block of data.
            </summary>
            <param name="strm">Data to send.</param>
            <param name="tag">User data.</param>
            <param name="callBack">Method to call, if send completes.</param>
        </member>
        <member name="E:LumiSoft.Net.BufferedSocket.Activity">
            <summary>
            Is called when there is some activity on socket (Read or Send).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.SocketEncoding">
            <summary>
            Gets or sets socket encoding for string(ReadLine,SendLine,....) operations.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.Logger">
            <summary>
            Gets or sets logging source. If this is setted, reads/writes are logged to it.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.IsClosed">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.LocalEndPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.RemoteEndPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:LumiSoft.Net.BufferedSocket.AvailableInBuffer">
            <summary>
            Gets the amount of data in buffer.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AuthType">
            <summary>
            Authentication type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AuthType.Plain">
            <summary>
            Plain username/password authentication.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AuthType.APOP">
            <summary>
            APOP
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AuthType.LOGIN">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AuthType.CRAM_MD5">
            <summary>
            Cram-md5 authentication.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AuthType.DIGEST_MD5">
            <summary>
            DIGEST-md5 authentication.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Core">
            <summary>
            Provides net core utility methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Core.DoPeriodHandling(System.Byte[],System.Boolean)">
            <summary>
            Does period handling.
            </summary>
            <param name="data"></param>
            <param name="add_Remove">If true add periods, else removes periods.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.DoPeriodHandling(System.IO.Stream,System.Boolean)">
            <summary>
            Does period handling.
            </summary>
            <param name="strm">Input stream.</param>
            <param name="add_Remove">If true add periods, else removes periods.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.DoPeriodHandling(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Does period handling.
            </summary>
            <param name="strm">Input stream.</param>
            <param name="add_Remove">If true add periods, else removes periods.</param>
            <param name="setStrmPosTo0">If true sets stream position to 0.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.ScanInvalid_CR_or_LF(System.IO.Stream)">
            <summary>
            Scans invalid CR or LF combination in stream. Returns true if contains invalid CR or LF combination.
            </summary>
            <param name="strm">Stream which to check.</param>
            <returns>Returns true if contains invalid CR or LF combination.</returns>
        </member>
        <member name="M:LumiSoft.Net.Core.GetHostName(System.Net.IPAddress)">
            <summary>
            Gets host name. If fails returns 'UnkownHost'.
            </summary>
            <param name="IP"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.GetArgsText(System.String,System.String)">
            <summary>
            Gets argument part of command text.
            </summary>
            <param name="input">Input srting from where to remove value.</param>
            <param name="cmdTxtToRemove">Command text which to remove.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.IsNumber(System.String)">
            <summary>
            Checks if specified string is number(long).
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Core.QuotedPrintableDecode(System.Text.Encoding,System.Byte[],System.Boolean)">
            <summary>
            quoted-printable decoder.
            </summary>
            <param name="encoding">Input string encoding.</param>
            <param name="data">Data which to encode.</param>
            <param name="includeCRLF">Specified if line breaks are included or skipped.</param>
            <returns>Returns decoded data with specified encoding.</returns>
        </member>
        <member name="M:LumiSoft.Net.Core.QuotedPrintableDecodeB(System.Byte[],System.Boolean)">
            <summary>
            quoted-printable decoder.
            </summary>
            <param name="data">Data which to encode.</param>
            <param name="includeCRLF">Specified if line breaks are included or skipped.</param>
            <returns>Returns decoded data.</returns>
        </member>
        <member name="M:LumiSoft.Net.Core.QDecode(System.Text.Encoding,System.String)">
            <summary>
            "Q" decoder. This is same as quoted-printable, except '_' is converted to ' '.
            </summary>
            <param name="encoding">Input string encoding.</param>
            <param name="data">String which to encode.</param>
            <returns>Returns decoded string.</returns>		
        </member>
        <member name="M:LumiSoft.Net.Core.CanonicalDecode(System.String)">
            <summary>
            Canonical decoding. Decodes all canonical encoding occurences in specified text.
            Usually mime message header unicode/8bit values are encoded as Canonical.
            Format: =?charSet?type[Q or B]?encoded string?= .
            </summary>
            <param name="text">Text to decode.</param>
            <returns>Returns decoded text.</returns>
        </member>
        <member name="M:LumiSoft.Net.Core.CanonicalEncode(System.String,System.String)">
            <summary>
            Canonical encoding.
            </summary>
            <param name="str">String to encode.</param>
            <param name="charSet">To which charset to encode string.</param>
            <returns>Returns encoded text.</returns>
        </member>
        <member name="M:LumiSoft.Net.Core.IsAscii(System.String)">
            <summary>
            Checks if specified string data is acii data.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.ReadReplyCode">
            <summary>
            Reply reading return codes.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ReadReplyCode.Ok">
            <summary>
            Read completed successfully.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ReadReplyCode.TimeOut">
            <summary>
            Read timed out.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ReadReplyCode.LengthExceeded">
            <summary>
            Maximum allowed Length exceeded.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ReadReplyCode.SocketClosed">
            <summary>
            Connected client closed connection.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.ReadReplyCode.UnKnownError">
            <summary>
            UnKnown error, eception raised.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ReadException">
            <summary>
            Summary description for ReadException.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ReadException.#ctor(LumiSoft.Net.ReadReplyCode,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="P:LumiSoft.Net.ReadException.ReadReplyCode">
            <summary>
            Gets read error.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.StreamLineReader">
            <summary>
            Byte[] line parser.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.StreamLineReader.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="strmSource"></param>
        </member>
        <member name="M:LumiSoft.Net.StreamLineReader.ReadLine">
            <summary>
            Reads byte[] line from stream.
            </summary>
            <returns>Return null if end of stream reached.</returns>
        </member>
    </members>
</doc>
